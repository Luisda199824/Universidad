Created by PLY version 3.9 (http://www.dabeaz.com/ply)

Unused terminals:

    RBRACE
    APOSTROPHE
    LBRACE
    CLRSCR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> PROGRAM ID SEMI declaration_initial BEGIN declarations END DOT
Rule 2     declaration_initial -> uses_declaration
Rule 3     declaration_initial -> declaracion_variables
Rule 4     declaration_initial -> uses_declaration declaration_initial
Rule 5     declaration_initial -> declaracion_variables declaration_initial
Rule 6     declaracion_variables -> VAR var_declaration COLON type_specifier SEMI
Rule 7     declaracion_variables -> VAR var_declaration COLON IP SEMI
Rule 8     declaracion_variables -> const_declaration
Rule 9     const_declaration -> CONST ID NUMBER SEMI
Rule 10    var_declaration -> ID
Rule 11    var_declaration -> ID COMMA var_declaration
Rule 12    type_specifier -> INTEGER
Rule 13    type_specifier -> CHAR
Rule 14    type_specifier -> BYTE
Rule 15    type_specifier -> REAL
Rule 16    type_specifier -> SINGLE
Rule 17    type_specifier -> DOUBLE
Rule 18    type_specifier -> STRING
Rule 19    type_specifier -> BOOLEAN
Rule 20    type_specifier -> IP
Rule 21    type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI
Rule 22    uses_declaration -> USES ID SEMI
Rule 23    declarations -> write_declaration
Rule 24    declarations -> write_declaration declarations
Rule 25    declarations -> readln_declaration
Rule 26    declarations -> readln_declaration declarations
Rule 27    declarations -> declaracion_variables
Rule 28    declarations -> declaracion_variables declarations
Rule 29    declarations -> stament
Rule 30    declarations -> stament declarations
Rule 31    declarations -> var_assignation
Rule 32    declarations -> var_assignation declarations
Rule 33    declarations -> class_declaration
Rule 34    declarations -> class_declaration declarations
Rule 35    declarations -> functions_declarations
Rule 36    declarations -> functions_declarations declarations
Rule 37    declarations -> pointer_assignation
Rule 38    declarations -> pointer_assignation declarations
Rule 39    declarations -> class_assignation
Rule 40    declarations -> class_assignation declarations
Rule 41    class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
Rule 42    class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI
Rule 43    pointer_assignation -> ID MINUS GT ID SEMI
Rule 44    class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
Rule 45    class_statements -> var_into_class
Rule 46    class_statements -> var_into_class class_statements
Rule 47    class_statements -> method_declaration
Rule 48    class_statements -> method_declaration class_statements
Rule 49    var_into_class -> op_empaquetamiento declaracion_variables
Rule 50    method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI
Rule 51    parameters_method -> ID
Rule 52    parameters_method -> ID COMMA parameters_method
Rule 53    op_empaquetamiento -> PUBLIC
Rule 54    op_empaquetamiento -> PRIVATE
Rule 55    var_assignation -> array_assignation
Rule 56    var_assignation -> op_var ASSIGN arith_operation SEMI
Rule 57    var_assignation -> op_var ASSIGN STRINGVAL SEMI
Rule 58    var_assignation -> op_var ASSIGN IPVAL SEMI
Rule 59    var_assignation -> op_var ASSIGN op_var SEMI
Rule 60    array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
Rule 61    array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI
Rule 62    array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
Rule 63    array_assignation -> array_call
Rule 64    arith_operation -> op_var op_arith op_var
Rule 65    arith_operation -> op_var op_arith arith_operation
Rule 66    arith_operation -> operation
Rule 67    operation -> op_var
Rule 68    operation -> operation op_arith operation
Rule 69    operation -> LPARENT operation RPARENT
Rule 70    stament -> while_declaration
Rule 71    stament -> for_declaration
Rule 72    stament -> if_declaration
Rule 73    stament -> declarations ID ASSIGN
Rule 74    stament -> ID LPARENT declarations RPARENT
Rule 75    stament -> BREAK SEMI
Rule 76    while_declaration -> WHILE relation DO BEGIN declarations END SEMI
Rule 77    for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI
Rule 78    function_call -> ID LPARENT var_declaration RPARENT
Rule 79    assignation -> op_var ASSIGN op_var
Rule 80    if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI
Rule 81    relation -> op_var
Rule 82    relation -> operation
Rule 83    relation -> relation op_logic relation
Rule 84    relation -> LPARENT relation RPARENT
Rule 85    relacion_if -> relation
Rule 86    relacion_if -> LPARENT op_var op_arith op_var RPARENT op_logic op_var
Rule 87    else_stament -> ELSE declarations
Rule 88    else_stament -> <empty>
Rule 89    write_declaration -> WRITE LPARENT op_write RPARENT SEMI
Rule 90    op_write -> string_sentence
Rule 91    op_write -> op_var
Rule 92    op_write -> array_call
Rule 93    op_write -> op_write COMMA op_write
Rule 94    array_call -> ID LBLOCK op_var RBLOCK
Rule 95    string_sentence -> STRINGVAL
Rule 96    string_sentence -> STRINGVAL PLUS ID
Rule 97    string_sentence -> STRINGVAL PLUS string_sentence
Rule 98    readln_declaration -> READLN LPARENT ID RPARENT SEMI
Rule 99    op_var -> ID
Rule 100   op_var -> NUMBER
Rule 101   op_var -> array_call
Rule 102   op_var -> function_call
Rule 103   op_arith -> PLUS
Rule 104   op_arith -> MINUS
Rule 105   op_arith -> TIMES
Rule 106   op_arith -> DIVIDE
Rule 107   op_arith -> MOD
Rule 108   op_logic -> EQ
Rule 109   op_logic -> NE
Rule 110   op_logic -> LT
Rule 111   op_logic -> LE
Rule 112   op_logic -> GT
Rule 113   op_logic -> GE
Rule 114   op_logic -> LNOT
Rule 115   op_logic -> LOR
Rule 116   op_logic -> LAND
Rule 117   op_logic -> LXOR
Rule 118   functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
Rule 119   parameters -> ID end_parameters
Rule 120   parameters -> ID COMMA parameters
Rule 121   end_parameters -> COLON type_specifier
Rule 122   declaration_function_initial -> ID COLON type_specifier SEMI
Rule 123   declaration_function_initial -> ID COLON type_specifier SEMI declaration_function_initial

Terminals, with rules where they appear

APOSTROPHE           : 
ARRAY                : 21
ASSIGN               : 56 57 58 59 60 61 62 73 79
BEGIN                : 1 44 50 76 77 80 118
BOOLEAN              : 19
BREAK                : 75
BYTE                 : 14
CHAR                 : 13
CLASS                : 44
CLRSCR               : 
COLON                : 6 7 118 121 122 123
COMMA                : 11 52 93 120
CONST                : 9
DIVIDE               : 106
DO                   : 76 77
DOT                  : 1 21 21
DOUBLE               : 17
ELSE                 : 87
END                  : 1 44 50 76 77 80 118
EQ                   : 41 42 108
FOR                  : 77
FUNCTION             : 118
GE                   : 113
GT                   : 43 112
ID                   : 1 9 10 11 22 41 41 41 42 42 42 43 43 44 50 51 52 60 61 61 62 73 74 78 94 96 98 99 118 119 120 122 123
IF                   : 80
INTEGER              : 12
IP                   : 7 20
IPVAL                : 58
LAND                 : 116
LBLOCK               : 21 60 61 62 94
LBRACE               : 
LE                   : 111
LNOT                 : 114
LOR                  : 115
LPARENT              : 41 42 50 69 74 78 84 86 89 98 118
LT                   : 110
LXOR                 : 117
MINUS                : 43 104
MOD                  : 107
NE                   : 109
NEW                  : 41 42
NUMBER               : 9 21 21 60 100
OF                   : 21
PLUS                 : 96 97 103
PRIVATE              : 54
PROGRAM              : 1
PUBLIC               : 53
RBLOCK               : 21 60 61 62 94
RBRACE               : 
READLN               : 98
REAL                 : 15
RPARENT              : 41 42 50 69 74 78 84 86 89 98 118
SEMI                 : 1 6 7 9 21 22 41 42 43 44 50 56 57 58 59 60 61 62 75 76 77 80 89 98 118 118 122 123
SINGLE               : 16
STRING               : 18
STRINGVAL            : 57 95 96 97
THEN                 : 80
TIMES                : 105
TO                   : 77
USES                 : 22
VAR                  : 6 7 118
WHILE                : 76
WRITE                : 89
error                : 

Nonterminals, with rules where they appear

arith_operation      : 56 65
array_assignation    : 55 62
array_call           : 63 92 101
assignation          : 77
class_assignation    : 39 40
class_declaration    : 33 34
class_statements     : 44 46 48
const_declaration    : 8
declaracion_variables : 3 5 27 28 49
declaration_function_initial : 118 123
declaration_initial  : 1 4 5
declarations         : 1 24 26 28 30 32 34 36 38 40 50 73 74 76 77 80 87 118
else_stament         : 80
end_parameters       : 119
for_declaration      : 71
function_call        : 102
functions_declarations : 35 36
if_declaration       : 72
method_declaration   : 47 48
op_arith             : 64 65 68 86
op_empaquetamiento   : 44 49 50
op_logic             : 83 86
op_var               : 56 57 58 59 59 64 64 65 67 77 79 79 81 86 86 86 91 94
op_write             : 89 93 93
operation            : 60 61 62 66 68 68 69 82
parameters           : 118 120
parameters_method    : 41 50 52
pointer_assignation  : 37 38
programa             : 0
readln_declaration   : 25 26
relacion_if          : 80
relation             : 76 83 83 84 85
stament              : 29 30
string_sentence      : 90 97
type_specifier       : 6 21 118 121 122 123
uses_declaration     : 2 4
var_assignation      : 31 32
var_declaration      : 6 7 11 78
var_into_class       : 45 46
while_declaration    : 70
write_declaration    : 23 24

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . PROGRAM ID SEMI declaration_initial BEGIN declarations END DOT

    PROGRAM         shift and go to state 1

    programa                       shift and go to state 2

state 1

    (1) programa -> PROGRAM . ID SEMI declaration_initial BEGIN declarations END DOT

    ID              shift and go to state 3


state 2

    (0) S' -> programa .



state 3

    (1) programa -> PROGRAM ID . SEMI declaration_initial BEGIN declarations END DOT

    SEMI            shift and go to state 4


state 4

    (1) programa -> PROGRAM ID SEMI . declaration_initial BEGIN declarations END DOT
    (2) declaration_initial -> . uses_declaration
    (3) declaration_initial -> . declaracion_variables
    (4) declaration_initial -> . uses_declaration declaration_initial
    (5) declaration_initial -> . declaracion_variables declaration_initial
    (22) uses_declaration -> . USES ID SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (9) const_declaration -> . CONST ID NUMBER SEMI

    USES            shift and go to state 8
    VAR             shift and go to state 10
    CONST           shift and go to state 7

    declaration_initial            shift and go to state 9
    const_declaration              shift and go to state 6
    declaracion_variables          shift and go to state 5
    uses_declaration               shift and go to state 11

state 5

    (3) declaration_initial -> declaracion_variables .
    (5) declaration_initial -> declaracion_variables . declaration_initial
    (2) declaration_initial -> . uses_declaration
    (3) declaration_initial -> . declaracion_variables
    (4) declaration_initial -> . uses_declaration declaration_initial
    (5) declaration_initial -> . declaracion_variables declaration_initial
    (22) uses_declaration -> . USES ID SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (9) const_declaration -> . CONST ID NUMBER SEMI

    BEGIN           reduce using rule 3 (declaration_initial -> declaracion_variables .)
    USES            shift and go to state 8
    VAR             shift and go to state 10
    CONST           shift and go to state 7

    declaracion_variables          shift and go to state 5
    const_declaration              shift and go to state 6
    declaration_initial            shift and go to state 12
    uses_declaration               shift and go to state 11

state 6

    (8) declaracion_variables -> const_declaration .

    WRITE           reduce using rule 8 (declaracion_variables -> const_declaration .)
    READLN          reduce using rule 8 (declaracion_variables -> const_declaration .)
    VAR             reduce using rule 8 (declaracion_variables -> const_declaration .)
    ID              reduce using rule 8 (declaracion_variables -> const_declaration .)
    BREAK           reduce using rule 8 (declaracion_variables -> const_declaration .)
    FUNCTION        reduce using rule 8 (declaracion_variables -> const_declaration .)
    CONST           reduce using rule 8 (declaracion_variables -> const_declaration .)
    WHILE           reduce using rule 8 (declaracion_variables -> const_declaration .)
    FOR             reduce using rule 8 (declaracion_variables -> const_declaration .)
    IF              reduce using rule 8 (declaracion_variables -> const_declaration .)
    NUMBER          reduce using rule 8 (declaracion_variables -> const_declaration .)
    PUBLIC          reduce using rule 8 (declaracion_variables -> const_declaration .)
    PRIVATE         reduce using rule 8 (declaracion_variables -> const_declaration .)
    END             reduce using rule 8 (declaracion_variables -> const_declaration .)
    RPARENT         reduce using rule 8 (declaracion_variables -> const_declaration .)
    ELSE            reduce using rule 8 (declaracion_variables -> const_declaration .)
    USES            reduce using rule 8 (declaracion_variables -> const_declaration .)
    BEGIN           reduce using rule 8 (declaracion_variables -> const_declaration .)


state 7

    (9) const_declaration -> CONST . ID NUMBER SEMI

    ID              shift and go to state 13


state 8

    (22) uses_declaration -> USES . ID SEMI

    ID              shift and go to state 14


state 9

    (1) programa -> PROGRAM ID SEMI declaration_initial . BEGIN declarations END DOT

    BEGIN           shift and go to state 15


state 10

    (6) declaracion_variables -> VAR . var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> VAR . var_declaration COLON IP SEMI
    (10) var_declaration -> . ID
    (11) var_declaration -> . ID COMMA var_declaration

    ID              shift and go to state 17

    var_declaration                shift and go to state 16

state 11

    (2) declaration_initial -> uses_declaration .
    (4) declaration_initial -> uses_declaration . declaration_initial
    (2) declaration_initial -> . uses_declaration
    (3) declaration_initial -> . declaracion_variables
    (4) declaration_initial -> . uses_declaration declaration_initial
    (5) declaration_initial -> . declaracion_variables declaration_initial
    (22) uses_declaration -> . USES ID SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (9) const_declaration -> . CONST ID NUMBER SEMI

    BEGIN           reduce using rule 2 (declaration_initial -> uses_declaration .)
    USES            shift and go to state 8
    VAR             shift and go to state 10
    CONST           shift and go to state 7

    declaration_initial            shift and go to state 18
    const_declaration              shift and go to state 6
    declaracion_variables          shift and go to state 5
    uses_declaration               shift and go to state 11

state 12

    (5) declaration_initial -> declaracion_variables declaration_initial .

    BEGIN           reduce using rule 5 (declaration_initial -> declaracion_variables declaration_initial .)


state 13

    (9) const_declaration -> CONST ID . NUMBER SEMI

    NUMBER          shift and go to state 19


state 14

    (22) uses_declaration -> USES ID . SEMI

    SEMI            shift and go to state 20


state 15

    (1) programa -> PROGRAM ID SEMI declaration_initial BEGIN . declarations END DOT
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 45
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 16

    (6) declaracion_variables -> VAR var_declaration . COLON type_specifier SEMI
    (7) declaracion_variables -> VAR var_declaration . COLON IP SEMI

    COLON           shift and go to state 50


state 17

    (10) var_declaration -> ID .
    (11) var_declaration -> ID . COMMA var_declaration

    COLON           reduce using rule 10 (var_declaration -> ID .)
    RPARENT         reduce using rule 10 (var_declaration -> ID .)
    COMMA           shift and go to state 51


state 18

    (4) declaration_initial -> uses_declaration declaration_initial .

    BEGIN           reduce using rule 4 (declaration_initial -> uses_declaration declaration_initial .)


state 19

    (9) const_declaration -> CONST ID NUMBER . SEMI

    SEMI            shift and go to state 52


state 20

    (22) uses_declaration -> USES ID SEMI .

    USES            reduce using rule 22 (uses_declaration -> USES ID SEMI .)
    VAR             reduce using rule 22 (uses_declaration -> USES ID SEMI .)
    CONST           reduce using rule 22 (uses_declaration -> USES ID SEMI .)
    BEGIN           reduce using rule 22 (uses_declaration -> USES ID SEMI .)


state 21

    (39) declarations -> class_assignation .
    (40) declarations -> class_assignation . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 39 (declarations -> class_assignation .)
    END             reduce using rule 39 (declarations -> class_assignation .)
    ELSE            reduce using rule 39 (declarations -> class_assignation .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 39 (declarations -> class_assignation .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 53
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 22

    (100) op_var -> NUMBER .

    PLUS            reduce using rule 100 (op_var -> NUMBER .)
    MINUS           reduce using rule 100 (op_var -> NUMBER .)
    TIMES           reduce using rule 100 (op_var -> NUMBER .)
    DIVIDE          reduce using rule 100 (op_var -> NUMBER .)
    MOD             reduce using rule 100 (op_var -> NUMBER .)
    RPARENT         reduce using rule 100 (op_var -> NUMBER .)
    EQ              reduce using rule 100 (op_var -> NUMBER .)
    NE              reduce using rule 100 (op_var -> NUMBER .)
    LT              reduce using rule 100 (op_var -> NUMBER .)
    LE              reduce using rule 100 (op_var -> NUMBER .)
    GT              reduce using rule 100 (op_var -> NUMBER .)
    GE              reduce using rule 100 (op_var -> NUMBER .)
    LNOT            reduce using rule 100 (op_var -> NUMBER .)
    LOR             reduce using rule 100 (op_var -> NUMBER .)
    LAND            reduce using rule 100 (op_var -> NUMBER .)
    LXOR            reduce using rule 100 (op_var -> NUMBER .)
    ASSIGN          reduce using rule 100 (op_var -> NUMBER .)
    DO              reduce using rule 100 (op_var -> NUMBER .)
    SEMI            reduce using rule 100 (op_var -> NUMBER .)
    TO              reduce using rule 100 (op_var -> NUMBER .)
    COMMA           reduce using rule 100 (op_var -> NUMBER .)
    THEN            reduce using rule 100 (op_var -> NUMBER .)
    RBLOCK          reduce using rule 100 (op_var -> NUMBER .)


state 23

    (102) op_var -> function_call .

    PLUS            reduce using rule 102 (op_var -> function_call .)
    MINUS           reduce using rule 102 (op_var -> function_call .)
    TIMES           reduce using rule 102 (op_var -> function_call .)
    DIVIDE          reduce using rule 102 (op_var -> function_call .)
    MOD             reduce using rule 102 (op_var -> function_call .)
    RPARENT         reduce using rule 102 (op_var -> function_call .)
    EQ              reduce using rule 102 (op_var -> function_call .)
    NE              reduce using rule 102 (op_var -> function_call .)
    LT              reduce using rule 102 (op_var -> function_call .)
    LE              reduce using rule 102 (op_var -> function_call .)
    GT              reduce using rule 102 (op_var -> function_call .)
    GE              reduce using rule 102 (op_var -> function_call .)
    LNOT            reduce using rule 102 (op_var -> function_call .)
    LOR             reduce using rule 102 (op_var -> function_call .)
    LAND            reduce using rule 102 (op_var -> function_call .)
    LXOR            reduce using rule 102 (op_var -> function_call .)
    ASSIGN          reduce using rule 102 (op_var -> function_call .)
    DO              reduce using rule 102 (op_var -> function_call .)
    SEMI            reduce using rule 102 (op_var -> function_call .)
    TO              reduce using rule 102 (op_var -> function_call .)
    COMMA           reduce using rule 102 (op_var -> function_call .)
    THEN            reduce using rule 102 (op_var -> function_call .)
    RBLOCK          reduce using rule 102 (op_var -> function_call .)


state 24

    (98) readln_declaration -> READLN . LPARENT ID RPARENT SEMI

    LPARENT         shift and go to state 54


state 25

    (76) while_declaration -> WHILE . relation DO BEGIN declarations END SEMI
    (81) relation -> . op_var
    (82) relation -> . operation
    (83) relation -> . relation op_logic relation
    (84) relation -> . LPARENT relation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 55
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 57
    relation                       shift and go to state 56
    operation                      shift and go to state 59

state 26

    (56) var_assignation -> op_var . ASSIGN arith_operation SEMI
    (57) var_assignation -> op_var . ASSIGN STRINGVAL SEMI
    (58) var_assignation -> op_var . ASSIGN IPVAL SEMI
    (59) var_assignation -> op_var . ASSIGN op_var SEMI

    ASSIGN          shift and go to state 61


state 27

    (29) declarations -> stament .
    (30) declarations -> stament . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 29 (declarations -> stament .)
    END             reduce using rule 29 (declarations -> stament .)
    ELSE            reduce using rule 29 (declarations -> stament .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 29 (declarations -> stament .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 62
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 28

    (44) class_declaration -> op_empaquetamiento . CLASS ID BEGIN class_statements END SEMI

    CLASS           shift and go to state 63


state 29

    (31) declarations -> var_assignation .
    (32) declarations -> var_assignation . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 31 (declarations -> var_assignation .)
    END             reduce using rule 31 (declarations -> var_assignation .)
    ELSE            reduce using rule 31 (declarations -> var_assignation .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 31 (declarations -> var_assignation .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 64
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 30

    (54) op_empaquetamiento -> PRIVATE .

    CLASS           reduce using rule 54 (op_empaquetamiento -> PRIVATE .)
    ID              reduce using rule 54 (op_empaquetamiento -> PRIVATE .)
    VAR             reduce using rule 54 (op_empaquetamiento -> PRIVATE .)
    CONST           reduce using rule 54 (op_empaquetamiento -> PRIVATE .)


state 31

    (25) declarations -> readln_declaration .
    (26) declarations -> readln_declaration . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 25 (declarations -> readln_declaration .)
    END             reduce using rule 25 (declarations -> readln_declaration .)
    ELSE            reduce using rule 25 (declarations -> readln_declaration .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 25 (declarations -> readln_declaration .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 65
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 32

    (71) stament -> for_declaration .

    WRITE           reduce using rule 71 (stament -> for_declaration .)
    READLN          reduce using rule 71 (stament -> for_declaration .)
    VAR             reduce using rule 71 (stament -> for_declaration .)
    ID              reduce using rule 71 (stament -> for_declaration .)
    BREAK           reduce using rule 71 (stament -> for_declaration .)
    FUNCTION        reduce using rule 71 (stament -> for_declaration .)
    CONST           reduce using rule 71 (stament -> for_declaration .)
    WHILE           reduce using rule 71 (stament -> for_declaration .)
    FOR             reduce using rule 71 (stament -> for_declaration .)
    IF              reduce using rule 71 (stament -> for_declaration .)
    NUMBER          reduce using rule 71 (stament -> for_declaration .)
    PUBLIC          reduce using rule 71 (stament -> for_declaration .)
    PRIVATE         reduce using rule 71 (stament -> for_declaration .)
    END             reduce using rule 71 (stament -> for_declaration .)
    RPARENT         reduce using rule 71 (stament -> for_declaration .)
    ELSE            reduce using rule 71 (stament -> for_declaration .)


state 33

    (118) functions_declarations -> FUNCTION . ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI

    ID              shift and go to state 66


state 34

    (75) stament -> BREAK . SEMI

    SEMI            shift and go to state 67


state 35

    (77) for_declaration -> FOR . assignation TO op_var DO BEGIN declarations END SEMI
    (79) assignation -> . op_var ASSIGN op_var
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    assignation                    shift and go to state 68
    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 69

state 36

    (23) declarations -> write_declaration .
    (24) declarations -> write_declaration . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 23 (declarations -> write_declaration .)
    END             reduce using rule 23 (declarations -> write_declaration .)
    ELSE            reduce using rule 23 (declarations -> write_declaration .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 23 (declarations -> write_declaration .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 70
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 37

    (35) declarations -> functions_declarations .
    (36) declarations -> functions_declarations . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 35 (declarations -> functions_declarations .)
    END             reduce using rule 35 (declarations -> functions_declarations .)
    ELSE            reduce using rule 35 (declarations -> functions_declarations .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 35 (declarations -> functions_declarations .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 71
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 38

    (89) write_declaration -> WRITE . LPARENT op_write RPARENT SEMI

    LPARENT         shift and go to state 72


state 39

    (27) declarations -> declaracion_variables .
    (28) declarations -> declaracion_variables . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 27 (declarations -> declaracion_variables .)
    END             reduce using rule 27 (declarations -> declaracion_variables .)
    ELSE            reduce using rule 27 (declarations -> declaracion_variables .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 27 (declarations -> declaracion_variables .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 73
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 40

    (53) op_empaquetamiento -> PUBLIC .

    CLASS           reduce using rule 53 (op_empaquetamiento -> PUBLIC .)
    ID              reduce using rule 53 (op_empaquetamiento -> PUBLIC .)
    VAR             reduce using rule 53 (op_empaquetamiento -> PUBLIC .)
    CONST           reduce using rule 53 (op_empaquetamiento -> PUBLIC .)


state 41

    (37) declarations -> pointer_assignation .
    (38) declarations -> pointer_assignation . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 37 (declarations -> pointer_assignation .)
    END             reduce using rule 37 (declarations -> pointer_assignation .)
    ELSE            reduce using rule 37 (declarations -> pointer_assignation .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 37 (declarations -> pointer_assignation .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 74
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 42

    (74) stament -> ID . LPARENT declarations RPARENT
    (43) pointer_assignation -> ID . MINUS GT ID SEMI
    (41) class_assignation -> ID . ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> ID . ID EQ NEW ID LPARENT RPARENT SEMI
    (60) array_assignation -> ID . LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> ID . LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> ID . LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (99) op_var -> ID .
    (94) array_call -> ID . LBLOCK op_var RBLOCK
    (78) function_call -> ID . LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 76
    MINUS           shift and go to state 78
    ID              shift and go to state 75
    LBLOCK          shift and go to state 77
    ASSIGN          reduce using rule 99 (op_var -> ID .)


state 43

    (70) stament -> while_declaration .

    WRITE           reduce using rule 70 (stament -> while_declaration .)
    READLN          reduce using rule 70 (stament -> while_declaration .)
    VAR             reduce using rule 70 (stament -> while_declaration .)
    ID              reduce using rule 70 (stament -> while_declaration .)
    BREAK           reduce using rule 70 (stament -> while_declaration .)
    FUNCTION        reduce using rule 70 (stament -> while_declaration .)
    CONST           reduce using rule 70 (stament -> while_declaration .)
    WHILE           reduce using rule 70 (stament -> while_declaration .)
    FOR             reduce using rule 70 (stament -> while_declaration .)
    IF              reduce using rule 70 (stament -> while_declaration .)
    NUMBER          reduce using rule 70 (stament -> while_declaration .)
    PUBLIC          reduce using rule 70 (stament -> while_declaration .)
    PRIVATE         reduce using rule 70 (stament -> while_declaration .)
    END             reduce using rule 70 (stament -> while_declaration .)
    RPARENT         reduce using rule 70 (stament -> while_declaration .)
    ELSE            reduce using rule 70 (stament -> while_declaration .)


state 44

    (80) if_declaration -> IF . relacion_if THEN BEGIN declarations else_stament END SEMI
    (85) relacion_if -> . relation
    (86) relacion_if -> . LPARENT op_var op_arith op_var RPARENT op_logic op_var
    (81) relation -> . op_var
    (82) relation -> . operation
    (83) relation -> . relation op_logic relation
    (84) relation -> . LPARENT relation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 81
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    relation                       shift and go to state 79
    op_var                         shift and go to state 57
    relacion_if                    shift and go to state 80
    array_call                     shift and go to state 58
    operation                      shift and go to state 59

state 45

    (1) programa -> PROGRAM ID SEMI declaration_initial BEGIN declarations . END DOT
    (73) stament -> declarations . ID ASSIGN

    END             shift and go to state 82
    ID              shift and go to state 83


state 46

    (55) var_assignation -> array_assignation .

    WRITE           reduce using rule 55 (var_assignation -> array_assignation .)
    READLN          reduce using rule 55 (var_assignation -> array_assignation .)
    VAR             reduce using rule 55 (var_assignation -> array_assignation .)
    ID              reduce using rule 55 (var_assignation -> array_assignation .)
    BREAK           reduce using rule 55 (var_assignation -> array_assignation .)
    FUNCTION        reduce using rule 55 (var_assignation -> array_assignation .)
    CONST           reduce using rule 55 (var_assignation -> array_assignation .)
    WHILE           reduce using rule 55 (var_assignation -> array_assignation .)
    FOR             reduce using rule 55 (var_assignation -> array_assignation .)
    IF              reduce using rule 55 (var_assignation -> array_assignation .)
    NUMBER          reduce using rule 55 (var_assignation -> array_assignation .)
    PUBLIC          reduce using rule 55 (var_assignation -> array_assignation .)
    PRIVATE         reduce using rule 55 (var_assignation -> array_assignation .)
    END             reduce using rule 55 (var_assignation -> array_assignation .)
    RPARENT         reduce using rule 55 (var_assignation -> array_assignation .)
    ELSE            reduce using rule 55 (var_assignation -> array_assignation .)


state 47

    (33) declarations -> class_declaration .
    (34) declarations -> class_declaration . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 33 (declarations -> class_declaration .)
    END             reduce using rule 33 (declarations -> class_declaration .)
    ELSE            reduce using rule 33 (declarations -> class_declaration .)
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

  ! ID              [ reduce using rule 33 (declarations -> class_declaration .) ]

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 84
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 48

    (63) array_assignation -> array_call .
    (101) op_var -> array_call .

  ! reduce/reduce conflict for RBLOCK resolved using rule 63 (array_assignation -> array_call .)
    WRITE           reduce using rule 63 (array_assignation -> array_call .)
    READLN          reduce using rule 63 (array_assignation -> array_call .)
    VAR             reduce using rule 63 (array_assignation -> array_call .)
    ID              reduce using rule 63 (array_assignation -> array_call .)
    BREAK           reduce using rule 63 (array_assignation -> array_call .)
    FUNCTION        reduce using rule 63 (array_assignation -> array_call .)
    CONST           reduce using rule 63 (array_assignation -> array_call .)
    WHILE           reduce using rule 63 (array_assignation -> array_call .)
    FOR             reduce using rule 63 (array_assignation -> array_call .)
    IF              reduce using rule 63 (array_assignation -> array_call .)
    NUMBER          reduce using rule 63 (array_assignation -> array_call .)
    PUBLIC          reduce using rule 63 (array_assignation -> array_call .)
    PRIVATE         reduce using rule 63 (array_assignation -> array_call .)
    RPARENT         reduce using rule 63 (array_assignation -> array_call .)
    END             reduce using rule 63 (array_assignation -> array_call .)
    ELSE            reduce using rule 63 (array_assignation -> array_call .)
    RBLOCK          reduce using rule 63 (array_assignation -> array_call .)
    ASSIGN          reduce using rule 101 (op_var -> array_call .)

  ! RBLOCK          [ reduce using rule 101 (op_var -> array_call .) ]


state 49

    (72) stament -> if_declaration .

    WRITE           reduce using rule 72 (stament -> if_declaration .)
    READLN          reduce using rule 72 (stament -> if_declaration .)
    VAR             reduce using rule 72 (stament -> if_declaration .)
    ID              reduce using rule 72 (stament -> if_declaration .)
    BREAK           reduce using rule 72 (stament -> if_declaration .)
    FUNCTION        reduce using rule 72 (stament -> if_declaration .)
    CONST           reduce using rule 72 (stament -> if_declaration .)
    WHILE           reduce using rule 72 (stament -> if_declaration .)
    FOR             reduce using rule 72 (stament -> if_declaration .)
    IF              reduce using rule 72 (stament -> if_declaration .)
    NUMBER          reduce using rule 72 (stament -> if_declaration .)
    PUBLIC          reduce using rule 72 (stament -> if_declaration .)
    PRIVATE         reduce using rule 72 (stament -> if_declaration .)
    END             reduce using rule 72 (stament -> if_declaration .)
    RPARENT         reduce using rule 72 (stament -> if_declaration .)
    ELSE            reduce using rule 72 (stament -> if_declaration .)


state 50

    (6) declaracion_variables -> VAR var_declaration COLON . type_specifier SEMI
    (7) declaracion_variables -> VAR var_declaration COLON . IP SEMI
    (12) type_specifier -> . INTEGER
    (13) type_specifier -> . CHAR
    (14) type_specifier -> . BYTE
    (15) type_specifier -> . REAL
    (16) type_specifier -> . SINGLE
    (17) type_specifier -> . DOUBLE
    (18) type_specifier -> . STRING
    (19) type_specifier -> . BOOLEAN
    (20) type_specifier -> . IP
    (21) type_specifier -> . ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    IP              shift and go to state 88
    INTEGER         shift and go to state 93
    CHAR            shift and go to state 89
    BYTE            shift and go to state 94
    REAL            shift and go to state 85
    SINGLE          shift and go to state 90
    DOUBLE          shift and go to state 92
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 91
    ARRAY           shift and go to state 95

    type_specifier                 shift and go to state 86

state 51

    (11) var_declaration -> ID COMMA . var_declaration
    (10) var_declaration -> . ID
    (11) var_declaration -> . ID COMMA var_declaration

    ID              shift and go to state 17

    var_declaration                shift and go to state 96

state 52

    (9) const_declaration -> CONST ID NUMBER SEMI .

    WRITE           reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    READLN          reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    VAR             reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    ID              reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    BREAK           reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    FUNCTION        reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    CONST           reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    WHILE           reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    FOR             reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    IF              reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    NUMBER          reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    PUBLIC          reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    PRIVATE         reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    END             reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    RPARENT         reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    ELSE            reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    USES            reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)
    BEGIN           reduce using rule 9 (const_declaration -> CONST ID NUMBER SEMI .)


state 53

    (40) declarations -> class_assignation declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 40 (declarations -> class_assignation declarations .)
    END             reduce using rule 40 (declarations -> class_assignation declarations .)
    ELSE            reduce using rule 40 (declarations -> class_assignation declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 40 (declarations -> class_assignation declarations .) ]


state 54

    (98) readln_declaration -> READLN LPARENT . ID RPARENT SEMI

    ID              shift and go to state 97


state 55

    (84) relation -> LPARENT . relation RPARENT
    (69) operation -> LPARENT . operation RPARENT
    (81) relation -> . op_var
    (82) relation -> . operation
    (83) relation -> . relation op_logic relation
    (84) relation -> . LPARENT relation RPARENT
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 55
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 57
    relation                       shift and go to state 98
    operation                      shift and go to state 99

state 56

    (76) while_declaration -> WHILE relation . DO BEGIN declarations END SEMI
    (83) relation -> relation . op_logic relation
    (108) op_logic -> . EQ
    (109) op_logic -> . NE
    (110) op_logic -> . LT
    (111) op_logic -> . LE
    (112) op_logic -> . GT
    (113) op_logic -> . GE
    (114) op_logic -> . LNOT
    (115) op_logic -> . LOR
    (116) op_logic -> . LAND
    (117) op_logic -> . LXOR

    DO              shift and go to state 100
    EQ              shift and go to state 111
    NE              shift and go to state 106
    LT              shift and go to state 104
    LE              shift and go to state 101
    GT              shift and go to state 108
    GE              shift and go to state 103
    LNOT            shift and go to state 110
    LOR             shift and go to state 107
    LAND            shift and go to state 109
    LXOR            shift and go to state 102

    op_logic                       shift and go to state 105

state 57

    (81) relation -> op_var .
    (67) operation -> op_var .

  ! reduce/reduce conflict for RPARENT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for EQ resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for NE resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LE resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for GT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for GE resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LNOT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LOR resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LAND resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LXOR resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for DO resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for THEN resolved using rule 67 (operation -> op_var .)
    RPARENT         reduce using rule 67 (operation -> op_var .)
    PLUS            reduce using rule 67 (operation -> op_var .)
    MINUS           reduce using rule 67 (operation -> op_var .)
    TIMES           reduce using rule 67 (operation -> op_var .)
    DIVIDE          reduce using rule 67 (operation -> op_var .)
    MOD             reduce using rule 67 (operation -> op_var .)
    EQ              reduce using rule 67 (operation -> op_var .)
    NE              reduce using rule 67 (operation -> op_var .)
    LT              reduce using rule 67 (operation -> op_var .)
    LE              reduce using rule 67 (operation -> op_var .)
    GT              reduce using rule 67 (operation -> op_var .)
    GE              reduce using rule 67 (operation -> op_var .)
    LNOT            reduce using rule 67 (operation -> op_var .)
    LOR             reduce using rule 67 (operation -> op_var .)
    LAND            reduce using rule 67 (operation -> op_var .)
    LXOR            reduce using rule 67 (operation -> op_var .)
    DO              reduce using rule 67 (operation -> op_var .)
    THEN            reduce using rule 67 (operation -> op_var .)

  ! RPARENT         [ reduce using rule 81 (relation -> op_var .) ]
  ! EQ              [ reduce using rule 81 (relation -> op_var .) ]
  ! NE              [ reduce using rule 81 (relation -> op_var .) ]
  ! LT              [ reduce using rule 81 (relation -> op_var .) ]
  ! LE              [ reduce using rule 81 (relation -> op_var .) ]
  ! GT              [ reduce using rule 81 (relation -> op_var .) ]
  ! GE              [ reduce using rule 81 (relation -> op_var .) ]
  ! LNOT            [ reduce using rule 81 (relation -> op_var .) ]
  ! LOR             [ reduce using rule 81 (relation -> op_var .) ]
  ! LAND            [ reduce using rule 81 (relation -> op_var .) ]
  ! LXOR            [ reduce using rule 81 (relation -> op_var .) ]
  ! DO              [ reduce using rule 81 (relation -> op_var .) ]
  ! THEN            [ reduce using rule 81 (relation -> op_var .) ]


state 58

    (101) op_var -> array_call .

    PLUS            reduce using rule 101 (op_var -> array_call .)
    MINUS           reduce using rule 101 (op_var -> array_call .)
    TIMES           reduce using rule 101 (op_var -> array_call .)
    DIVIDE          reduce using rule 101 (op_var -> array_call .)
    MOD             reduce using rule 101 (op_var -> array_call .)
    RPARENT         reduce using rule 101 (op_var -> array_call .)
    EQ              reduce using rule 101 (op_var -> array_call .)
    NE              reduce using rule 101 (op_var -> array_call .)
    LT              reduce using rule 101 (op_var -> array_call .)
    LE              reduce using rule 101 (op_var -> array_call .)
    GT              reduce using rule 101 (op_var -> array_call .)
    GE              reduce using rule 101 (op_var -> array_call .)
    LNOT            reduce using rule 101 (op_var -> array_call .)
    LOR             reduce using rule 101 (op_var -> array_call .)
    LAND            reduce using rule 101 (op_var -> array_call .)
    LXOR            reduce using rule 101 (op_var -> array_call .)
    DO              reduce using rule 101 (op_var -> array_call .)
    ASSIGN          reduce using rule 101 (op_var -> array_call .)
    SEMI            reduce using rule 101 (op_var -> array_call .)
    TO              reduce using rule 101 (op_var -> array_call .)
    THEN            reduce using rule 101 (op_var -> array_call .)
    RBLOCK          reduce using rule 101 (op_var -> array_call .)


state 59

    (82) relation -> operation .
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

    EQ              reduce using rule 82 (relation -> operation .)
    NE              reduce using rule 82 (relation -> operation .)
    LT              reduce using rule 82 (relation -> operation .)
    LE              reduce using rule 82 (relation -> operation .)
    GT              reduce using rule 82 (relation -> operation .)
    GE              reduce using rule 82 (relation -> operation .)
    LNOT            reduce using rule 82 (relation -> operation .)
    LOR             reduce using rule 82 (relation -> operation .)
    LAND            reduce using rule 82 (relation -> operation .)
    LXOR            reduce using rule 82 (relation -> operation .)
    DO              reduce using rule 82 (relation -> operation .)
    THEN            reduce using rule 82 (relation -> operation .)
    RPARENT         reduce using rule 82 (relation -> operation .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

    op_arith                       shift and go to state 115

state 60

    (99) op_var -> ID .
    (94) array_call -> ID . LBLOCK op_var RBLOCK
    (78) function_call -> ID . LPARENT var_declaration RPARENT

    PLUS            reduce using rule 99 (op_var -> ID .)
    MINUS           reduce using rule 99 (op_var -> ID .)
    TIMES           reduce using rule 99 (op_var -> ID .)
    DIVIDE          reduce using rule 99 (op_var -> ID .)
    MOD             reduce using rule 99 (op_var -> ID .)
    RPARENT         reduce using rule 99 (op_var -> ID .)
    EQ              reduce using rule 99 (op_var -> ID .)
    NE              reduce using rule 99 (op_var -> ID .)
    LT              reduce using rule 99 (op_var -> ID .)
    LE              reduce using rule 99 (op_var -> ID .)
    GT              reduce using rule 99 (op_var -> ID .)
    GE              reduce using rule 99 (op_var -> ID .)
    LNOT            reduce using rule 99 (op_var -> ID .)
    LOR             reduce using rule 99 (op_var -> ID .)
    LAND            reduce using rule 99 (op_var -> ID .)
    LXOR            reduce using rule 99 (op_var -> ID .)
    DO              reduce using rule 99 (op_var -> ID .)
    ASSIGN          reduce using rule 99 (op_var -> ID .)
    SEMI            reduce using rule 99 (op_var -> ID .)
    TO              reduce using rule 99 (op_var -> ID .)
    COMMA           reduce using rule 99 (op_var -> ID .)
    THEN            reduce using rule 99 (op_var -> ID .)
    RBLOCK          reduce using rule 99 (op_var -> ID .)
    LBLOCK          shift and go to state 119
    LPARENT         shift and go to state 118


state 61

    (56) var_assignation -> op_var ASSIGN . arith_operation SEMI
    (57) var_assignation -> op_var ASSIGN . STRINGVAL SEMI
    (58) var_assignation -> op_var ASSIGN . IPVAL SEMI
    (59) var_assignation -> op_var ASSIGN . op_var SEMI
    (64) arith_operation -> . op_var op_arith op_var
    (65) arith_operation -> . op_var op_arith arith_operation
    (66) arith_operation -> . operation
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    STRINGVAL       shift and go to state 122
    IPVAL           shift and go to state 121
    ID              shift and go to state 60
    NUMBER          shift and go to state 22
    LPARENT         shift and go to state 123

    arith_operation                shift and go to state 120
    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 124
    operation                      shift and go to state 125

state 62

    (30) declarations -> stament declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 30 (declarations -> stament declarations .)
    END             reduce using rule 30 (declarations -> stament declarations .)
    ELSE            reduce using rule 30 (declarations -> stament declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 30 (declarations -> stament declarations .) ]


state 63

    (44) class_declaration -> op_empaquetamiento CLASS . ID BEGIN class_statements END SEMI

    ID              shift and go to state 126


state 64

    (32) declarations -> var_assignation declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 32 (declarations -> var_assignation declarations .)
    END             reduce using rule 32 (declarations -> var_assignation declarations .)
    ELSE            reduce using rule 32 (declarations -> var_assignation declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 32 (declarations -> var_assignation declarations .) ]


state 65

    (26) declarations -> readln_declaration declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 26 (declarations -> readln_declaration declarations .)
    END             reduce using rule 26 (declarations -> readln_declaration declarations .)
    ELSE            reduce using rule 26 (declarations -> readln_declaration declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 26 (declarations -> readln_declaration declarations .) ]


state 66

    (118) functions_declarations -> FUNCTION ID . LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI

    LPARENT         shift and go to state 127


state 67

    (75) stament -> BREAK SEMI .

    WRITE           reduce using rule 75 (stament -> BREAK SEMI .)
    READLN          reduce using rule 75 (stament -> BREAK SEMI .)
    VAR             reduce using rule 75 (stament -> BREAK SEMI .)
    ID              reduce using rule 75 (stament -> BREAK SEMI .)
    BREAK           reduce using rule 75 (stament -> BREAK SEMI .)
    FUNCTION        reduce using rule 75 (stament -> BREAK SEMI .)
    CONST           reduce using rule 75 (stament -> BREAK SEMI .)
    WHILE           reduce using rule 75 (stament -> BREAK SEMI .)
    FOR             reduce using rule 75 (stament -> BREAK SEMI .)
    IF              reduce using rule 75 (stament -> BREAK SEMI .)
    NUMBER          reduce using rule 75 (stament -> BREAK SEMI .)
    PUBLIC          reduce using rule 75 (stament -> BREAK SEMI .)
    PRIVATE         reduce using rule 75 (stament -> BREAK SEMI .)
    END             reduce using rule 75 (stament -> BREAK SEMI .)
    RPARENT         reduce using rule 75 (stament -> BREAK SEMI .)
    ELSE            reduce using rule 75 (stament -> BREAK SEMI .)


state 68

    (77) for_declaration -> FOR assignation . TO op_var DO BEGIN declarations END SEMI

    TO              shift and go to state 128


state 69

    (79) assignation -> op_var . ASSIGN op_var

    ASSIGN          shift and go to state 129


state 70

    (24) declarations -> write_declaration declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 24 (declarations -> write_declaration declarations .)
    END             reduce using rule 24 (declarations -> write_declaration declarations .)
    ELSE            reduce using rule 24 (declarations -> write_declaration declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 24 (declarations -> write_declaration declarations .) ]


state 71

    (36) declarations -> functions_declarations declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 36 (declarations -> functions_declarations declarations .)
    END             reduce using rule 36 (declarations -> functions_declarations declarations .)
    ELSE            reduce using rule 36 (declarations -> functions_declarations declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 36 (declarations -> functions_declarations declarations .) ]


state 72

    (89) write_declaration -> WRITE LPARENT . op_write RPARENT SEMI
    (90) op_write -> . string_sentence
    (91) op_write -> . op_var
    (92) op_write -> . array_call
    (93) op_write -> . op_write COMMA op_write
    (95) string_sentence -> . STRINGVAL
    (96) string_sentence -> . STRINGVAL PLUS ID
    (97) string_sentence -> . STRINGVAL PLUS string_sentence
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    STRINGVAL       shift and go to state 131
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 132
    op_write                       shift and go to state 133
    string_sentence                shift and go to state 134
    op_var                         shift and go to state 130

state 73

    (28) declarations -> declaracion_variables declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 28 (declarations -> declaracion_variables declarations .)
    END             reduce using rule 28 (declarations -> declaracion_variables declarations .)
    ELSE            reduce using rule 28 (declarations -> declaracion_variables declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 28 (declarations -> declaracion_variables declarations .) ]


state 74

    (38) declarations -> pointer_assignation declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 38 (declarations -> pointer_assignation declarations .)
    END             reduce using rule 38 (declarations -> pointer_assignation declarations .)
    ELSE            reduce using rule 38 (declarations -> pointer_assignation declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 38 (declarations -> pointer_assignation declarations .) ]


state 75

    (41) class_assignation -> ID ID . EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> ID ID . EQ NEW ID LPARENT RPARENT SEMI

    EQ              shift and go to state 135


state 76

    (74) stament -> ID LPARENT . declarations RPARENT
    (78) function_call -> ID LPARENT . var_declaration RPARENT
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (10) var_declaration -> . ID
    (11) var_declaration -> . ID COMMA var_declaration
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 137
    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    var_declaration                shift and go to state 136
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 138
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 77

    (60) array_assignation -> ID LBLOCK . NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> ID LBLOCK . ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> ID LBLOCK . array_assignation RBLOCK ASSIGN operation SEMI
    (94) array_call -> ID LBLOCK . op_var RBLOCK
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    NUMBER          shift and go to state 139
    ID              shift and go to state 140

    function_call                  shift and go to state 23
    array_call                     shift and go to state 48
    op_var                         shift and go to state 142
    array_assignation              shift and go to state 141

state 78

    (43) pointer_assignation -> ID MINUS . GT ID SEMI

    GT              shift and go to state 143


state 79

    (85) relacion_if -> relation .
    (83) relation -> relation . op_logic relation
    (108) op_logic -> . EQ
    (109) op_logic -> . NE
    (110) op_logic -> . LT
    (111) op_logic -> . LE
    (112) op_logic -> . GT
    (113) op_logic -> . GE
    (114) op_logic -> . LNOT
    (115) op_logic -> . LOR
    (116) op_logic -> . LAND
    (117) op_logic -> . LXOR

    THEN            reduce using rule 85 (relacion_if -> relation .)
    EQ              shift and go to state 111
    NE              shift and go to state 106
    LT              shift and go to state 104
    LE              shift and go to state 101
    GT              shift and go to state 108
    GE              shift and go to state 103
    LNOT            shift and go to state 110
    LOR             shift and go to state 107
    LAND            shift and go to state 109
    LXOR            shift and go to state 102

    op_logic                       shift and go to state 105

state 80

    (80) if_declaration -> IF relacion_if . THEN BEGIN declarations else_stament END SEMI

    THEN            shift and go to state 144


state 81

    (86) relacion_if -> LPARENT . op_var op_arith op_var RPARENT op_logic op_var
    (84) relation -> LPARENT . relation RPARENT
    (69) operation -> LPARENT . operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (81) relation -> . op_var
    (82) relation -> . operation
    (83) relation -> . relation op_logic relation
    (84) relation -> . LPARENT relation RPARENT
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22
    LPARENT         shift and go to state 55

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 145
    relation                       shift and go to state 98
    operation                      shift and go to state 99

state 82

    (1) programa -> PROGRAM ID SEMI declaration_initial BEGIN declarations END . DOT

    DOT             shift and go to state 146


state 83

    (73) stament -> declarations ID . ASSIGN

    ASSIGN          shift and go to state 147


state 84

    (34) declarations -> class_declaration declarations .
    (73) stament -> declarations . ID ASSIGN

  ! shift/reduce conflict for ID resolved as shift
    RPARENT         reduce using rule 34 (declarations -> class_declaration declarations .)
    END             reduce using rule 34 (declarations -> class_declaration declarations .)
    ELSE            reduce using rule 34 (declarations -> class_declaration declarations .)
    ID              shift and go to state 83

  ! ID              [ reduce using rule 34 (declarations -> class_declaration declarations .) ]


state 85

    (15) type_specifier -> REAL .

    RPARENT         reduce using rule 15 (type_specifier -> REAL .)
    SEMI            reduce using rule 15 (type_specifier -> REAL .)


state 86

    (6) declaracion_variables -> VAR var_declaration COLON type_specifier . SEMI

    SEMI            shift and go to state 148


state 87

    (18) type_specifier -> STRING .

    RPARENT         reduce using rule 18 (type_specifier -> STRING .)
    SEMI            reduce using rule 18 (type_specifier -> STRING .)


state 88

    (7) declaracion_variables -> VAR var_declaration COLON IP . SEMI
    (20) type_specifier -> IP .

  ! shift/reduce conflict for SEMI resolved as shift
    SEMI            shift and go to state 149

  ! SEMI            [ reduce using rule 20 (type_specifier -> IP .) ]


state 89

    (13) type_specifier -> CHAR .

    RPARENT         reduce using rule 13 (type_specifier -> CHAR .)
    SEMI            reduce using rule 13 (type_specifier -> CHAR .)


state 90

    (16) type_specifier -> SINGLE .

    RPARENT         reduce using rule 16 (type_specifier -> SINGLE .)
    SEMI            reduce using rule 16 (type_specifier -> SINGLE .)


state 91

    (19) type_specifier -> BOOLEAN .

    RPARENT         reduce using rule 19 (type_specifier -> BOOLEAN .)
    SEMI            reduce using rule 19 (type_specifier -> BOOLEAN .)


state 92

    (17) type_specifier -> DOUBLE .

    RPARENT         reduce using rule 17 (type_specifier -> DOUBLE .)
    SEMI            reduce using rule 17 (type_specifier -> DOUBLE .)


state 93

    (12) type_specifier -> INTEGER .

    RPARENT         reduce using rule 12 (type_specifier -> INTEGER .)
    SEMI            reduce using rule 12 (type_specifier -> INTEGER .)


state 94

    (14) type_specifier -> BYTE .

    RPARENT         reduce using rule 14 (type_specifier -> BYTE .)
    SEMI            reduce using rule 14 (type_specifier -> BYTE .)


state 95

    (21) type_specifier -> ARRAY . LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    LBLOCK          shift and go to state 150


state 96

    (11) var_declaration -> ID COMMA var_declaration .

    COLON           reduce using rule 11 (var_declaration -> ID COMMA var_declaration .)
    RPARENT         reduce using rule 11 (var_declaration -> ID COMMA var_declaration .)


state 97

    (98) readln_declaration -> READLN LPARENT ID . RPARENT SEMI

    RPARENT         shift and go to state 151


state 98

    (84) relation -> LPARENT relation . RPARENT
    (83) relation -> relation . op_logic relation
    (108) op_logic -> . EQ
    (109) op_logic -> . NE
    (110) op_logic -> . LT
    (111) op_logic -> . LE
    (112) op_logic -> . GT
    (113) op_logic -> . GE
    (114) op_logic -> . LNOT
    (115) op_logic -> . LOR
    (116) op_logic -> . LAND
    (117) op_logic -> . LXOR

    RPARENT         shift and go to state 152
    EQ              shift and go to state 111
    NE              shift and go to state 106
    LT              shift and go to state 104
    LE              shift and go to state 101
    GT              shift and go to state 108
    GE              shift and go to state 103
    LNOT            shift and go to state 110
    LOR             shift and go to state 107
    LAND            shift and go to state 109
    LXOR            shift and go to state 102

    op_logic                       shift and go to state 105

state 99

    (69) operation -> LPARENT operation . RPARENT
    (82) relation -> operation .
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

  ! shift/reduce conflict for RPARENT resolved as shift
    RPARENT         shift and go to state 153
    EQ              reduce using rule 82 (relation -> operation .)
    NE              reduce using rule 82 (relation -> operation .)
    LT              reduce using rule 82 (relation -> operation .)
    LE              reduce using rule 82 (relation -> operation .)
    GT              reduce using rule 82 (relation -> operation .)
    GE              reduce using rule 82 (relation -> operation .)
    LNOT            reduce using rule 82 (relation -> operation .)
    LOR             reduce using rule 82 (relation -> operation .)
    LAND            reduce using rule 82 (relation -> operation .)
    LXOR            reduce using rule 82 (relation -> operation .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

  ! RPARENT         [ reduce using rule 82 (relation -> operation .) ]

    op_arith                       shift and go to state 115

state 100

    (76) while_declaration -> WHILE relation DO . BEGIN declarations END SEMI

    BEGIN           shift and go to state 154


state 101

    (111) op_logic -> LE .

    LPARENT         reduce using rule 111 (op_logic -> LE .)
    ID              reduce using rule 111 (op_logic -> LE .)
    NUMBER          reduce using rule 111 (op_logic -> LE .)


state 102

    (117) op_logic -> LXOR .

    LPARENT         reduce using rule 117 (op_logic -> LXOR .)
    ID              reduce using rule 117 (op_logic -> LXOR .)
    NUMBER          reduce using rule 117 (op_logic -> LXOR .)


state 103

    (113) op_logic -> GE .

    LPARENT         reduce using rule 113 (op_logic -> GE .)
    ID              reduce using rule 113 (op_logic -> GE .)
    NUMBER          reduce using rule 113 (op_logic -> GE .)


state 104

    (110) op_logic -> LT .

    LPARENT         reduce using rule 110 (op_logic -> LT .)
    ID              reduce using rule 110 (op_logic -> LT .)
    NUMBER          reduce using rule 110 (op_logic -> LT .)


state 105

    (83) relation -> relation op_logic . relation
    (81) relation -> . op_var
    (82) relation -> . operation
    (83) relation -> . relation op_logic relation
    (84) relation -> . LPARENT relation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 55
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 57
    relation                       shift and go to state 155
    operation                      shift and go to state 59

state 106

    (109) op_logic -> NE .

    LPARENT         reduce using rule 109 (op_logic -> NE .)
    ID              reduce using rule 109 (op_logic -> NE .)
    NUMBER          reduce using rule 109 (op_logic -> NE .)


state 107

    (115) op_logic -> LOR .

    LPARENT         reduce using rule 115 (op_logic -> LOR .)
    ID              reduce using rule 115 (op_logic -> LOR .)
    NUMBER          reduce using rule 115 (op_logic -> LOR .)


state 108

    (112) op_logic -> GT .

    LPARENT         reduce using rule 112 (op_logic -> GT .)
    ID              reduce using rule 112 (op_logic -> GT .)
    NUMBER          reduce using rule 112 (op_logic -> GT .)


state 109

    (116) op_logic -> LAND .

    LPARENT         reduce using rule 116 (op_logic -> LAND .)
    ID              reduce using rule 116 (op_logic -> LAND .)
    NUMBER          reduce using rule 116 (op_logic -> LAND .)


state 110

    (114) op_logic -> LNOT .

    LPARENT         reduce using rule 114 (op_logic -> LNOT .)
    ID              reduce using rule 114 (op_logic -> LNOT .)
    NUMBER          reduce using rule 114 (op_logic -> LNOT .)


state 111

    (108) op_logic -> EQ .

    LPARENT         reduce using rule 108 (op_logic -> EQ .)
    ID              reduce using rule 108 (op_logic -> EQ .)
    NUMBER          reduce using rule 108 (op_logic -> EQ .)


state 112

    (106) op_arith -> DIVIDE .

    ID              reduce using rule 106 (op_arith -> DIVIDE .)
    NUMBER          reduce using rule 106 (op_arith -> DIVIDE .)
    LPARENT         reduce using rule 106 (op_arith -> DIVIDE .)


state 113

    (105) op_arith -> TIMES .

    ID              reduce using rule 105 (op_arith -> TIMES .)
    NUMBER          reduce using rule 105 (op_arith -> TIMES .)
    LPARENT         reduce using rule 105 (op_arith -> TIMES .)


state 114

    (103) op_arith -> PLUS .

    ID              reduce using rule 103 (op_arith -> PLUS .)
    NUMBER          reduce using rule 103 (op_arith -> PLUS .)
    LPARENT         reduce using rule 103 (op_arith -> PLUS .)


state 115

    (68) operation -> operation op_arith . operation
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 123
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 156
    operation                      shift and go to state 157

state 116

    (104) op_arith -> MINUS .

    ID              reduce using rule 104 (op_arith -> MINUS .)
    NUMBER          reduce using rule 104 (op_arith -> MINUS .)
    LPARENT         reduce using rule 104 (op_arith -> MINUS .)


state 117

    (107) op_arith -> MOD .

    ID              reduce using rule 107 (op_arith -> MOD .)
    NUMBER          reduce using rule 107 (op_arith -> MOD .)
    LPARENT         reduce using rule 107 (op_arith -> MOD .)


state 118

    (78) function_call -> ID LPARENT . var_declaration RPARENT
    (10) var_declaration -> . ID
    (11) var_declaration -> . ID COMMA var_declaration

    ID              shift and go to state 17

    var_declaration                shift and go to state 136

state 119

    (94) array_call -> ID LBLOCK . op_var RBLOCK
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    array_call                     shift and go to state 58
    op_var                         shift and go to state 142
    function_call                  shift and go to state 23

state 120

    (56) var_assignation -> op_var ASSIGN arith_operation . SEMI

    SEMI            shift and go to state 158


state 121

    (58) var_assignation -> op_var ASSIGN IPVAL . SEMI

    SEMI            shift and go to state 159


state 122

    (57) var_assignation -> op_var ASSIGN STRINGVAL . SEMI

    SEMI            shift and go to state 160


state 123

    (69) operation -> LPARENT . operation RPARENT
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 123
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 156
    operation                      shift and go to state 161

state 124

    (59) var_assignation -> op_var ASSIGN op_var . SEMI
    (64) arith_operation -> op_var . op_arith op_var
    (65) arith_operation -> op_var . op_arith arith_operation
    (67) operation -> op_var .
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

  ! shift/reduce conflict for SEMI resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            shift and go to state 162
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

  ! PLUS            [ reduce using rule 67 (operation -> op_var .) ]
  ! MINUS           [ reduce using rule 67 (operation -> op_var .) ]
  ! TIMES           [ reduce using rule 67 (operation -> op_var .) ]
  ! DIVIDE          [ reduce using rule 67 (operation -> op_var .) ]
  ! MOD             [ reduce using rule 67 (operation -> op_var .) ]
  ! SEMI            [ reduce using rule 67 (operation -> op_var .) ]

    op_arith                       shift and go to state 163

state 125

    (66) arith_operation -> operation .
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

    SEMI            reduce using rule 66 (arith_operation -> operation .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

    op_arith                       shift and go to state 115

state 126

    (44) class_declaration -> op_empaquetamiento CLASS ID . BEGIN class_statements END SEMI

    BEGIN           shift and go to state 164


state 127

    (118) functions_declarations -> FUNCTION ID LPARENT . parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (119) parameters -> . ID end_parameters
    (120) parameters -> . ID COMMA parameters

    ID              shift and go to state 166

    parameters                     shift and go to state 165

state 128

    (77) for_declaration -> FOR assignation TO . op_var DO BEGIN declarations END SEMI
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 167

state 129

    (79) assignation -> op_var ASSIGN . op_var
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    array_call                     shift and go to state 58
    op_var                         shift and go to state 168
    function_call                  shift and go to state 23

state 130

    (91) op_write -> op_var .

    COMMA           reduce using rule 91 (op_write -> op_var .)
    RPARENT         reduce using rule 91 (op_write -> op_var .)


state 131

    (95) string_sentence -> STRINGVAL .
    (96) string_sentence -> STRINGVAL . PLUS ID
    (97) string_sentence -> STRINGVAL . PLUS string_sentence

    RPARENT         reduce using rule 95 (string_sentence -> STRINGVAL .)
    COMMA           reduce using rule 95 (string_sentence -> STRINGVAL .)
    PLUS            shift and go to state 169


state 132

    (92) op_write -> array_call .
    (101) op_var -> array_call .

  ! reduce/reduce conflict for RPARENT resolved using rule 92 (op_write -> array_call .)
  ! reduce/reduce conflict for COMMA resolved using rule 92 (op_write -> array_call .)
    COMMA           reduce using rule 92 (op_write -> array_call .)
    RPARENT         reduce using rule 92 (op_write -> array_call .)

  ! RPARENT         [ reduce using rule 101 (op_var -> array_call .) ]
  ! COMMA           [ reduce using rule 101 (op_var -> array_call .) ]


state 133

    (89) write_declaration -> WRITE LPARENT op_write . RPARENT SEMI
    (93) op_write -> op_write . COMMA op_write

    RPARENT         shift and go to state 171
    COMMA           shift and go to state 170


state 134

    (90) op_write -> string_sentence .

    COMMA           reduce using rule 90 (op_write -> string_sentence .)
    RPARENT         reduce using rule 90 (op_write -> string_sentence .)


state 135

    (41) class_assignation -> ID ID EQ . NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> ID ID EQ . NEW ID LPARENT RPARENT SEMI

    NEW             shift and go to state 172


state 136

    (78) function_call -> ID LPARENT var_declaration . RPARENT

    RPARENT         shift and go to state 173


state 137

    (10) var_declaration -> ID .
    (11) var_declaration -> ID . COMMA var_declaration
    (74) stament -> ID . LPARENT declarations RPARENT
    (43) pointer_assignation -> ID . MINUS GT ID SEMI
    (41) class_assignation -> ID . ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> ID . ID EQ NEW ID LPARENT RPARENT SEMI
    (60) array_assignation -> ID . LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> ID . LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> ID . LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (99) op_var -> ID .
    (94) array_call -> ID . LBLOCK op_var RBLOCK
    (78) function_call -> ID . LPARENT var_declaration RPARENT

    RPARENT         reduce using rule 10 (var_declaration -> ID .)
    COMMA           shift and go to state 51
    LPARENT         shift and go to state 76
    MINUS           shift and go to state 78
    ID              shift and go to state 75
    LBLOCK          shift and go to state 77
    ASSIGN          reduce using rule 99 (op_var -> ID .)


state 138

    (74) stament -> ID LPARENT declarations . RPARENT
    (73) stament -> declarations . ID ASSIGN

    RPARENT         shift and go to state 174
    ID              shift and go to state 83


state 139

    (60) array_assignation -> ID LBLOCK NUMBER . RBLOCK ASSIGN operation SEMI
    (100) op_var -> NUMBER .

  ! shift/reduce conflict for RBLOCK resolved as shift
    RBLOCK          shift and go to state 175

  ! RBLOCK          [ reduce using rule 100 (op_var -> NUMBER .) ]


state 140

    (61) array_assignation -> ID LBLOCK ID . RBLOCK ASSIGN operation SEMI
    (60) array_assignation -> ID . LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> ID . LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> ID . LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (99) op_var -> ID .
    (94) array_call -> ID . LBLOCK op_var RBLOCK
    (78) function_call -> ID . LPARENT var_declaration RPARENT

  ! shift/reduce conflict for RBLOCK resolved as shift
    RBLOCK          shift and go to state 176
    LBLOCK          shift and go to state 77
    LPARENT         shift and go to state 118

  ! RBLOCK          [ reduce using rule 99 (op_var -> ID .) ]


state 141

    (62) array_assignation -> ID LBLOCK array_assignation . RBLOCK ASSIGN operation SEMI

    RBLOCK          shift and go to state 177


state 142

    (94) array_call -> ID LBLOCK op_var . RBLOCK

    RBLOCK          shift and go to state 178


state 143

    (43) pointer_assignation -> ID MINUS GT . ID SEMI

    ID              shift and go to state 179


state 144

    (80) if_declaration -> IF relacion_if THEN . BEGIN declarations else_stament END SEMI

    BEGIN           shift and go to state 180


state 145

    (86) relacion_if -> LPARENT op_var . op_arith op_var RPARENT op_logic op_var
    (81) relation -> op_var .
    (67) operation -> op_var .
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

  ! reduce/reduce conflict for RPARENT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for EQ resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for NE resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LE resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for GT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for GE resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LNOT resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LOR resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LAND resolved using rule 67 (operation -> op_var .)
  ! reduce/reduce conflict for LXOR resolved using rule 67 (operation -> op_var .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    RPARENT         reduce using rule 67 (operation -> op_var .)
    EQ              reduce using rule 67 (operation -> op_var .)
    NE              reduce using rule 67 (operation -> op_var .)
    LT              reduce using rule 67 (operation -> op_var .)
    LE              reduce using rule 67 (operation -> op_var .)
    GT              reduce using rule 67 (operation -> op_var .)
    GE              reduce using rule 67 (operation -> op_var .)
    LNOT            reduce using rule 67 (operation -> op_var .)
    LOR             reduce using rule 67 (operation -> op_var .)
    LAND            reduce using rule 67 (operation -> op_var .)
    LXOR            reduce using rule 67 (operation -> op_var .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

  ! RPARENT         [ reduce using rule 81 (relation -> op_var .) ]
  ! EQ              [ reduce using rule 81 (relation -> op_var .) ]
  ! NE              [ reduce using rule 81 (relation -> op_var .) ]
  ! LT              [ reduce using rule 81 (relation -> op_var .) ]
  ! LE              [ reduce using rule 81 (relation -> op_var .) ]
  ! GT              [ reduce using rule 81 (relation -> op_var .) ]
  ! GE              [ reduce using rule 81 (relation -> op_var .) ]
  ! LNOT            [ reduce using rule 81 (relation -> op_var .) ]
  ! LOR             [ reduce using rule 81 (relation -> op_var .) ]
  ! LAND            [ reduce using rule 81 (relation -> op_var .) ]
  ! LXOR            [ reduce using rule 81 (relation -> op_var .) ]
  ! PLUS            [ reduce using rule 67 (operation -> op_var .) ]
  ! MINUS           [ reduce using rule 67 (operation -> op_var .) ]
  ! TIMES           [ reduce using rule 67 (operation -> op_var .) ]
  ! DIVIDE          [ reduce using rule 67 (operation -> op_var .) ]
  ! MOD             [ reduce using rule 67 (operation -> op_var .) ]

    op_arith                       shift and go to state 181

state 146

    (1) programa -> PROGRAM ID SEMI declaration_initial BEGIN declarations END DOT .

    $end            reduce using rule 1 (programa -> PROGRAM ID SEMI declaration_initial BEGIN declarations END DOT .)


state 147

    (73) stament -> declarations ID ASSIGN .

    WRITE           reduce using rule 73 (stament -> declarations ID ASSIGN .)
    READLN          reduce using rule 73 (stament -> declarations ID ASSIGN .)
    VAR             reduce using rule 73 (stament -> declarations ID ASSIGN .)
    ID              reduce using rule 73 (stament -> declarations ID ASSIGN .)
    BREAK           reduce using rule 73 (stament -> declarations ID ASSIGN .)
    FUNCTION        reduce using rule 73 (stament -> declarations ID ASSIGN .)
    CONST           reduce using rule 73 (stament -> declarations ID ASSIGN .)
    WHILE           reduce using rule 73 (stament -> declarations ID ASSIGN .)
    FOR             reduce using rule 73 (stament -> declarations ID ASSIGN .)
    IF              reduce using rule 73 (stament -> declarations ID ASSIGN .)
    NUMBER          reduce using rule 73 (stament -> declarations ID ASSIGN .)
    PUBLIC          reduce using rule 73 (stament -> declarations ID ASSIGN .)
    PRIVATE         reduce using rule 73 (stament -> declarations ID ASSIGN .)
    END             reduce using rule 73 (stament -> declarations ID ASSIGN .)
    RPARENT         reduce using rule 73 (stament -> declarations ID ASSIGN .)
    ELSE            reduce using rule 73 (stament -> declarations ID ASSIGN .)


state 148

    (6) declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .

    WRITE           reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    READLN          reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    VAR             reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    ID              reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    BREAK           reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    FUNCTION        reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    CONST           reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    WHILE           reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    FOR             reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    IF              reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    NUMBER          reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    PUBLIC          reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    PRIVATE         reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    END             reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    RPARENT         reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    ELSE            reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    USES            reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)
    BEGIN           reduce using rule 6 (declaracion_variables -> VAR var_declaration COLON type_specifier SEMI .)


state 149

    (7) declaracion_variables -> VAR var_declaration COLON IP SEMI .

    WRITE           reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    READLN          reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    VAR             reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    ID              reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    BREAK           reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    FUNCTION        reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    CONST           reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    WHILE           reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    FOR             reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    IF              reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    NUMBER          reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    PUBLIC          reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    PRIVATE         reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    END             reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    RPARENT         reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    ELSE            reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    USES            reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)
    BEGIN           reduce using rule 7 (declaracion_variables -> VAR var_declaration COLON IP SEMI .)


state 150

    (21) type_specifier -> ARRAY LBLOCK . NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    NUMBER          shift and go to state 182


state 151

    (98) readln_declaration -> READLN LPARENT ID RPARENT . SEMI

    SEMI            shift and go to state 183


state 152

    (84) relation -> LPARENT relation RPARENT .

    RPARENT         reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    EQ              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    NE              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    LT              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    LE              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    GT              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    GE              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    LNOT            reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    LOR             reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    LAND            reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    LXOR            reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    DO              reduce using rule 84 (relation -> LPARENT relation RPARENT .)
    THEN            reduce using rule 84 (relation -> LPARENT relation RPARENT .)


state 153

    (69) operation -> LPARENT operation RPARENT .

    PLUS            reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    MINUS           reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    TIMES           reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    DIVIDE          reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    MOD             reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    SEMI            reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    RPARENT         reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    EQ              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    NE              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    LT              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    LE              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    GT              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    GE              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    LNOT            reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    LOR             reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    LAND            reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    LXOR            reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    DO              reduce using rule 69 (operation -> LPARENT operation RPARENT .)
    THEN            reduce using rule 69 (operation -> LPARENT operation RPARENT .)


state 154

    (76) while_declaration -> WHILE relation DO BEGIN . declarations END SEMI
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 184
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 155

    (83) relation -> relation op_logic relation .
    (83) relation -> relation . op_logic relation
    (108) op_logic -> . EQ
    (109) op_logic -> . NE
    (110) op_logic -> . LT
    (111) op_logic -> . LE
    (112) op_logic -> . GT
    (113) op_logic -> . GE
    (114) op_logic -> . LNOT
    (115) op_logic -> . LOR
    (116) op_logic -> . LAND
    (117) op_logic -> . LXOR

  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NE resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for LE resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for GE resolved as shift
  ! shift/reduce conflict for LNOT resolved as shift
  ! shift/reduce conflict for LOR resolved as shift
  ! shift/reduce conflict for LAND resolved as shift
  ! shift/reduce conflict for LXOR resolved as shift
    RPARENT         reduce using rule 83 (relation -> relation op_logic relation .)
    DO              reduce using rule 83 (relation -> relation op_logic relation .)
    THEN            reduce using rule 83 (relation -> relation op_logic relation .)
    EQ              shift and go to state 111
    NE              shift and go to state 106
    LT              shift and go to state 104
    LE              shift and go to state 101
    GT              shift and go to state 108
    GE              shift and go to state 103
    LNOT            shift and go to state 110
    LOR             shift and go to state 107
    LAND            shift and go to state 109
    LXOR            shift and go to state 102

  ! EQ              [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! NE              [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! LT              [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! LE              [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! GT              [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! GE              [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! LNOT            [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! LOR             [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! LAND            [ reduce using rule 83 (relation -> relation op_logic relation .) ]
  ! LXOR            [ reduce using rule 83 (relation -> relation op_logic relation .) ]

    op_logic                       shift and go to state 105

state 156

    (67) operation -> op_var .

    SEMI            reduce using rule 67 (operation -> op_var .)
    PLUS            reduce using rule 67 (operation -> op_var .)
    MINUS           reduce using rule 67 (operation -> op_var .)
    TIMES           reduce using rule 67 (operation -> op_var .)
    DIVIDE          reduce using rule 67 (operation -> op_var .)
    MOD             reduce using rule 67 (operation -> op_var .)
    DO              reduce using rule 67 (operation -> op_var .)
    EQ              reduce using rule 67 (operation -> op_var .)
    NE              reduce using rule 67 (operation -> op_var .)
    LT              reduce using rule 67 (operation -> op_var .)
    LE              reduce using rule 67 (operation -> op_var .)
    GT              reduce using rule 67 (operation -> op_var .)
    GE              reduce using rule 67 (operation -> op_var .)
    LNOT            reduce using rule 67 (operation -> op_var .)
    LOR             reduce using rule 67 (operation -> op_var .)
    LAND            reduce using rule 67 (operation -> op_var .)
    LXOR            reduce using rule 67 (operation -> op_var .)
    THEN            reduce using rule 67 (operation -> op_var .)
    RPARENT         reduce using rule 67 (operation -> op_var .)


state 157

    (68) operation -> operation op_arith operation .
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 68 (operation -> operation op_arith operation .)
    RPARENT         reduce using rule 68 (operation -> operation op_arith operation .)
    EQ              reduce using rule 68 (operation -> operation op_arith operation .)
    NE              reduce using rule 68 (operation -> operation op_arith operation .)
    LT              reduce using rule 68 (operation -> operation op_arith operation .)
    LE              reduce using rule 68 (operation -> operation op_arith operation .)
    GT              reduce using rule 68 (operation -> operation op_arith operation .)
    GE              reduce using rule 68 (operation -> operation op_arith operation .)
    LNOT            reduce using rule 68 (operation -> operation op_arith operation .)
    LOR             reduce using rule 68 (operation -> operation op_arith operation .)
    LAND            reduce using rule 68 (operation -> operation op_arith operation .)
    LXOR            reduce using rule 68 (operation -> operation op_arith operation .)
    DO              reduce using rule 68 (operation -> operation op_arith operation .)
    THEN            reduce using rule 68 (operation -> operation op_arith operation .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

  ! PLUS            [ reduce using rule 68 (operation -> operation op_arith operation .) ]
  ! MINUS           [ reduce using rule 68 (operation -> operation op_arith operation .) ]
  ! TIMES           [ reduce using rule 68 (operation -> operation op_arith operation .) ]
  ! DIVIDE          [ reduce using rule 68 (operation -> operation op_arith operation .) ]
  ! MOD             [ reduce using rule 68 (operation -> operation op_arith operation .) ]

    op_arith                       shift and go to state 115

state 158

    (56) var_assignation -> op_var ASSIGN arith_operation SEMI .

    WRITE           reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    READLN          reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    VAR             reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    ID              reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    BREAK           reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    FUNCTION        reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    CONST           reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    WHILE           reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    FOR             reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    IF              reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    NUMBER          reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    PUBLIC          reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    PRIVATE         reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    END             reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    RPARENT         reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)
    ELSE            reduce using rule 56 (var_assignation -> op_var ASSIGN arith_operation SEMI .)


state 159

    (58) var_assignation -> op_var ASSIGN IPVAL SEMI .

    WRITE           reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    READLN          reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    VAR             reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    ID              reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    BREAK           reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    FUNCTION        reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    CONST           reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    WHILE           reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    FOR             reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    IF              reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    NUMBER          reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    PUBLIC          reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    PRIVATE         reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    END             reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    RPARENT         reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)
    ELSE            reduce using rule 58 (var_assignation -> op_var ASSIGN IPVAL SEMI .)


state 160

    (57) var_assignation -> op_var ASSIGN STRINGVAL SEMI .

    WRITE           reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    READLN          reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    VAR             reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    ID              reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    BREAK           reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    FUNCTION        reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    CONST           reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    WHILE           reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    FOR             reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    IF              reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    NUMBER          reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    PUBLIC          reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    PRIVATE         reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    END             reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    RPARENT         reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)
    ELSE            reduce using rule 57 (var_assignation -> op_var ASSIGN STRINGVAL SEMI .)


state 161

    (69) operation -> LPARENT operation . RPARENT
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

    RPARENT         shift and go to state 153
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

    op_arith                       shift and go to state 115

state 162

    (59) var_assignation -> op_var ASSIGN op_var SEMI .

    WRITE           reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    READLN          reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    VAR             reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    ID              reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    BREAK           reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    FUNCTION        reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    CONST           reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    WHILE           reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    FOR             reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    IF              reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    NUMBER          reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    PUBLIC          reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    PRIVATE         reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    END             reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    RPARENT         reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)
    ELSE            reduce using rule 59 (var_assignation -> op_var ASSIGN op_var SEMI .)


state 163

    (64) arith_operation -> op_var op_arith . op_var
    (65) arith_operation -> op_var op_arith . arith_operation
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (64) arith_operation -> . op_var op_arith op_var
    (65) arith_operation -> . op_var op_arith arith_operation
    (66) arith_operation -> . operation
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22
    LPARENT         shift and go to state 123

    arith_operation                shift and go to state 185
    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 186
    operation                      shift and go to state 125

state 164

    (44) class_declaration -> op_empaquetamiento CLASS ID BEGIN . class_statements END SEMI
    (45) class_statements -> . var_into_class
    (46) class_statements -> . var_into_class class_statements
    (47) class_statements -> . method_declaration
    (48) class_statements -> . method_declaration class_statements
    (49) var_into_class -> . op_empaquetamiento declaracion_variables
    (50) method_declaration -> . op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE

    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    op_empaquetamiento             shift and go to state 190
    var_into_class                 shift and go to state 188
    method_declaration             shift and go to state 189
    class_statements               shift and go to state 187

state 165

    (118) functions_declarations -> FUNCTION ID LPARENT parameters . RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI

    RPARENT         shift and go to state 191


state 166

    (119) parameters -> ID . end_parameters
    (120) parameters -> ID . COMMA parameters
    (121) end_parameters -> . COLON type_specifier

    COMMA           shift and go to state 193
    COLON           shift and go to state 194

    end_parameters                 shift and go to state 192

state 167

    (77) for_declaration -> FOR assignation TO op_var . DO BEGIN declarations END SEMI

    DO              shift and go to state 195


state 168

    (79) assignation -> op_var ASSIGN op_var .

    TO              reduce using rule 79 (assignation -> op_var ASSIGN op_var .)


state 169

    (96) string_sentence -> STRINGVAL PLUS . ID
    (97) string_sentence -> STRINGVAL PLUS . string_sentence
    (95) string_sentence -> . STRINGVAL
    (96) string_sentence -> . STRINGVAL PLUS ID
    (97) string_sentence -> . STRINGVAL PLUS string_sentence

    ID              shift and go to state 197
    STRINGVAL       shift and go to state 131

    string_sentence                shift and go to state 196

state 170

    (93) op_write -> op_write COMMA . op_write
    (90) op_write -> . string_sentence
    (91) op_write -> . op_var
    (92) op_write -> . array_call
    (93) op_write -> . op_write COMMA op_write
    (95) string_sentence -> . STRINGVAL
    (96) string_sentence -> . STRINGVAL PLUS ID
    (97) string_sentence -> . STRINGVAL PLUS string_sentence
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    STRINGVAL       shift and go to state 131
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 132
    op_write                       shift and go to state 198
    string_sentence                shift and go to state 134
    op_var                         shift and go to state 130

state 171

    (89) write_declaration -> WRITE LPARENT op_write RPARENT . SEMI

    SEMI            shift and go to state 199


state 172

    (41) class_assignation -> ID ID EQ NEW . ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> ID ID EQ NEW . ID LPARENT RPARENT SEMI

    ID              shift and go to state 200


state 173

    (78) function_call -> ID LPARENT var_declaration RPARENT .

    ASSIGN          reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    SEMI            reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    PLUS            reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    MINUS           reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    TIMES           reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    DIVIDE          reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    MOD             reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    RPARENT         reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    EQ              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    NE              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    LT              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    LE              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    GT              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    GE              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    LNOT            reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    LOR             reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    LAND            reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    LXOR            reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    COMMA           reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    DO              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    THEN            reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    TO              reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)
    RBLOCK          reduce using rule 78 (function_call -> ID LPARENT var_declaration RPARENT .)


state 174

    (74) stament -> ID LPARENT declarations RPARENT .

    WRITE           reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    READLN          reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    VAR             reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    ID              reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    BREAK           reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    FUNCTION        reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    CONST           reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    WHILE           reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    FOR             reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    IF              reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    NUMBER          reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    PUBLIC          reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    PRIVATE         reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    END             reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    RPARENT         reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)
    ELSE            reduce using rule 74 (stament -> ID LPARENT declarations RPARENT .)


state 175

    (60) array_assignation -> ID LBLOCK NUMBER RBLOCK . ASSIGN operation SEMI

    ASSIGN          shift and go to state 201


state 176

    (61) array_assignation -> ID LBLOCK ID RBLOCK . ASSIGN operation SEMI

    ASSIGN          shift and go to state 202


state 177

    (62) array_assignation -> ID LBLOCK array_assignation RBLOCK . ASSIGN operation SEMI

    ASSIGN          shift and go to state 203


state 178

    (94) array_call -> ID LBLOCK op_var RBLOCK .

    PLUS            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    MINUS           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    TIMES           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    DIVIDE          reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    MOD             reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    RPARENT         reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    EQ              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    NE              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    LT              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    LE              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    GT              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    GE              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    LNOT            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    LOR             reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    LAND            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    LXOR            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    TO              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    WRITE           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    READLN          reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    VAR             reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    ID              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    BREAK           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    FUNCTION        reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    CONST           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    WHILE           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    FOR             reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    IF              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    NUMBER          reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    PUBLIC          reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    PRIVATE         reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    END             reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    ASSIGN          reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    DO              reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    THEN            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    SEMI            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    ELSE            reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    COMMA           reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)
    RBLOCK          reduce using rule 94 (array_call -> ID LBLOCK op_var RBLOCK .)


state 179

    (43) pointer_assignation -> ID MINUS GT ID . SEMI

    SEMI            shift and go to state 204


state 180

    (80) if_declaration -> IF relacion_if THEN BEGIN . declarations else_stament END SEMI
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 205
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 181

    (86) relacion_if -> LPARENT op_var op_arith . op_var RPARENT op_logic op_var
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 206

state 182

    (21) type_specifier -> ARRAY LBLOCK NUMBER . DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    DOT             shift and go to state 207


state 183

    (98) readln_declaration -> READLN LPARENT ID RPARENT SEMI .

    WRITE           reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    READLN          reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    VAR             reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    ID              reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    BREAK           reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    FUNCTION        reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    CONST           reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    WHILE           reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    FOR             reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    IF              reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    NUMBER          reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    PUBLIC          reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    PRIVATE         reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    END             reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    RPARENT         reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)
    ELSE            reduce using rule 98 (readln_declaration -> READLN LPARENT ID RPARENT SEMI .)


state 184

    (76) while_declaration -> WHILE relation DO BEGIN declarations . END SEMI
    (73) stament -> declarations . ID ASSIGN

    END             shift and go to state 208
    ID              shift and go to state 83


state 185

    (65) arith_operation -> op_var op_arith arith_operation .

    SEMI            reduce using rule 65 (arith_operation -> op_var op_arith arith_operation .)


state 186

    (64) arith_operation -> op_var op_arith op_var .
    (64) arith_operation -> op_var . op_arith op_var
    (65) arith_operation -> op_var . op_arith arith_operation
    (67) operation -> op_var .
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

  ! reduce/reduce conflict for SEMI resolved using rule 64 (arith_operation -> op_var op_arith op_var .)
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
    SEMI            reduce using rule 64 (arith_operation -> op_var op_arith op_var .)
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

  ! PLUS            [ reduce using rule 67 (operation -> op_var .) ]
  ! MINUS           [ reduce using rule 67 (operation -> op_var .) ]
  ! TIMES           [ reduce using rule 67 (operation -> op_var .) ]
  ! DIVIDE          [ reduce using rule 67 (operation -> op_var .) ]
  ! MOD             [ reduce using rule 67 (operation -> op_var .) ]
  ! SEMI            [ reduce using rule 67 (operation -> op_var .) ]

    op_arith                       shift and go to state 163

state 187

    (44) class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements . END SEMI

    END             shift and go to state 209


state 188

    (45) class_statements -> var_into_class .
    (46) class_statements -> var_into_class . class_statements
    (45) class_statements -> . var_into_class
    (46) class_statements -> . var_into_class class_statements
    (47) class_statements -> . method_declaration
    (48) class_statements -> . method_declaration class_statements
    (49) var_into_class -> . op_empaquetamiento declaracion_variables
    (50) method_declaration -> . op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE

    END             reduce using rule 45 (class_statements -> var_into_class .)
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    op_empaquetamiento             shift and go to state 190
    var_into_class                 shift and go to state 188
    method_declaration             shift and go to state 189
    class_statements               shift and go to state 210

state 189

    (47) class_statements -> method_declaration .
    (48) class_statements -> method_declaration . class_statements
    (45) class_statements -> . var_into_class
    (46) class_statements -> . var_into_class class_statements
    (47) class_statements -> . method_declaration
    (48) class_statements -> . method_declaration class_statements
    (49) var_into_class -> . op_empaquetamiento declaracion_variables
    (50) method_declaration -> . op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE

    END             reduce using rule 47 (class_statements -> method_declaration .)
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    op_empaquetamiento             shift and go to state 190
    var_into_class                 shift and go to state 188
    method_declaration             shift and go to state 189
    class_statements               shift and go to state 211

state 190

    (49) var_into_class -> op_empaquetamiento . declaracion_variables
    (50) method_declaration -> op_empaquetamiento . ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (9) const_declaration -> . CONST ID NUMBER SEMI

    ID              shift and go to state 212
    VAR             shift and go to state 10
    CONST           shift and go to state 7

    const_declaration              shift and go to state 6
    declaracion_variables          shift and go to state 213

state 191

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT . COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI

    COLON           shift and go to state 214


state 192

    (119) parameters -> ID end_parameters .

    RPARENT         reduce using rule 119 (parameters -> ID end_parameters .)


state 193

    (120) parameters -> ID COMMA . parameters
    (119) parameters -> . ID end_parameters
    (120) parameters -> . ID COMMA parameters

    ID              shift and go to state 166

    parameters                     shift and go to state 215

state 194

    (121) end_parameters -> COLON . type_specifier
    (12) type_specifier -> . INTEGER
    (13) type_specifier -> . CHAR
    (14) type_specifier -> . BYTE
    (15) type_specifier -> . REAL
    (16) type_specifier -> . SINGLE
    (17) type_specifier -> . DOUBLE
    (18) type_specifier -> . STRING
    (19) type_specifier -> . BOOLEAN
    (20) type_specifier -> . IP
    (21) type_specifier -> . ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    INTEGER         shift and go to state 93
    CHAR            shift and go to state 89
    BYTE            shift and go to state 94
    REAL            shift and go to state 85
    SINGLE          shift and go to state 90
    DOUBLE          shift and go to state 92
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 91
    IP              shift and go to state 217
    ARRAY           shift and go to state 95

    type_specifier                 shift and go to state 216

state 195

    (77) for_declaration -> FOR assignation TO op_var DO . BEGIN declarations END SEMI

    BEGIN           shift and go to state 218


state 196

    (97) string_sentence -> STRINGVAL PLUS string_sentence .

    RPARENT         reduce using rule 97 (string_sentence -> STRINGVAL PLUS string_sentence .)
    COMMA           reduce using rule 97 (string_sentence -> STRINGVAL PLUS string_sentence .)


state 197

    (96) string_sentence -> STRINGVAL PLUS ID .

    RPARENT         reduce using rule 96 (string_sentence -> STRINGVAL PLUS ID .)
    COMMA           reduce using rule 96 (string_sentence -> STRINGVAL PLUS ID .)


state 198

    (93) op_write -> op_write COMMA op_write .
    (93) op_write -> op_write . COMMA op_write

  ! shift/reduce conflict for COMMA resolved as shift
    RPARENT         reduce using rule 93 (op_write -> op_write COMMA op_write .)
    COMMA           shift and go to state 170

  ! COMMA           [ reduce using rule 93 (op_write -> op_write COMMA op_write .) ]


state 199

    (89) write_declaration -> WRITE LPARENT op_write RPARENT SEMI .

    WRITE           reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    READLN          reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    VAR             reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    ID              reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    BREAK           reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    FUNCTION        reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    CONST           reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    WHILE           reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    FOR             reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    IF              reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    NUMBER          reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    PUBLIC          reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    PRIVATE         reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    END             reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    RPARENT         reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)
    ELSE            reduce using rule 89 (write_declaration -> WRITE LPARENT op_write RPARENT SEMI .)


state 200

    (41) class_assignation -> ID ID EQ NEW ID . LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> ID ID EQ NEW ID . LPARENT RPARENT SEMI

    LPARENT         shift and go to state 219


state 201

    (60) array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN . operation SEMI
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 123
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 156
    operation                      shift and go to state 220

state 202

    (61) array_assignation -> ID LBLOCK ID RBLOCK ASSIGN . operation SEMI
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 123
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 156
    operation                      shift and go to state 221

state 203

    (62) array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN . operation SEMI
    (67) operation -> . op_var
    (68) operation -> . operation op_arith operation
    (69) operation -> . LPARENT operation RPARENT
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    LPARENT         shift and go to state 123
    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 156
    operation                      shift and go to state 222

state 204

    (43) pointer_assignation -> ID MINUS GT ID SEMI .

    WRITE           reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    READLN          reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    VAR             reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    ID              reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    BREAK           reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    FUNCTION        reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    CONST           reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    WHILE           reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    FOR             reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    IF              reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    NUMBER          reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    PUBLIC          reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    PRIVATE         reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    END             reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    RPARENT         reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)
    ELSE            reduce using rule 43 (pointer_assignation -> ID MINUS GT ID SEMI .)


state 205

    (80) if_declaration -> IF relacion_if THEN BEGIN declarations . else_stament END SEMI
    (73) stament -> declarations . ID ASSIGN
    (87) else_stament -> . ELSE declarations
    (88) else_stament -> .

    ID              shift and go to state 83
    ELSE            shift and go to state 224
    END             reduce using rule 88 (else_stament -> .)

    else_stament                   shift and go to state 223

state 206

    (86) relacion_if -> LPARENT op_var op_arith op_var . RPARENT op_logic op_var

    RPARENT         shift and go to state 225


state 207

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT . DOT NUMBER RBLOCK OF type_specifier SEMI

    DOT             shift and go to state 226


state 208

    (76) while_declaration -> WHILE relation DO BEGIN declarations END . SEMI

    SEMI            shift and go to state 227


state 209

    (44) class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END . SEMI

    SEMI            shift and go to state 228


state 210

    (46) class_statements -> var_into_class class_statements .

    END             reduce using rule 46 (class_statements -> var_into_class class_statements .)


state 211

    (48) class_statements -> method_declaration class_statements .

    END             reduce using rule 48 (class_statements -> method_declaration class_statements .)


state 212

    (50) method_declaration -> op_empaquetamiento ID . LPARENT parameters_method RPARENT BEGIN declarations END SEMI

    LPARENT         shift and go to state 229


state 213

    (49) var_into_class -> op_empaquetamiento declaracion_variables .

    PUBLIC          reduce using rule 49 (var_into_class -> op_empaquetamiento declaracion_variables .)
    PRIVATE         reduce using rule 49 (var_into_class -> op_empaquetamiento declaracion_variables .)
    END             reduce using rule 49 (var_into_class -> op_empaquetamiento declaracion_variables .)


state 214

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON . type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (12) type_specifier -> . INTEGER
    (13) type_specifier -> . CHAR
    (14) type_specifier -> . BYTE
    (15) type_specifier -> . REAL
    (16) type_specifier -> . SINGLE
    (17) type_specifier -> . DOUBLE
    (18) type_specifier -> . STRING
    (19) type_specifier -> . BOOLEAN
    (20) type_specifier -> . IP
    (21) type_specifier -> . ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    INTEGER         shift and go to state 93
    CHAR            shift and go to state 89
    BYTE            shift and go to state 94
    REAL            shift and go to state 85
    SINGLE          shift and go to state 90
    DOUBLE          shift and go to state 92
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 91
    IP              shift and go to state 217
    ARRAY           shift and go to state 95

    type_specifier                 shift and go to state 230

state 215

    (120) parameters -> ID COMMA parameters .

    RPARENT         reduce using rule 120 (parameters -> ID COMMA parameters .)


state 216

    (121) end_parameters -> COLON type_specifier .

    RPARENT         reduce using rule 121 (end_parameters -> COLON type_specifier .)


state 217

    (20) type_specifier -> IP .

    RPARENT         reduce using rule 20 (type_specifier -> IP .)
    SEMI            reduce using rule 20 (type_specifier -> IP .)


state 218

    (77) for_declaration -> FOR assignation TO op_var DO BEGIN . declarations END SEMI
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 231
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 219

    (41) class_assignation -> ID ID EQ NEW ID LPARENT . parameters_method RPARENT SEMI
    (42) class_assignation -> ID ID EQ NEW ID LPARENT . RPARENT SEMI
    (51) parameters_method -> . ID
    (52) parameters_method -> . ID COMMA parameters_method

    RPARENT         shift and go to state 233
    ID              shift and go to state 234

    parameters_method              shift and go to state 232

state 220

    (60) array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation . SEMI
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

    SEMI            shift and go to state 235
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

    op_arith                       shift and go to state 115

state 221

    (61) array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation . SEMI
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

    SEMI            shift and go to state 236
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

    op_arith                       shift and go to state 115

state 222

    (62) array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation . SEMI
    (68) operation -> operation . op_arith operation
    (103) op_arith -> . PLUS
    (104) op_arith -> . MINUS
    (105) op_arith -> . TIMES
    (106) op_arith -> . DIVIDE
    (107) op_arith -> . MOD

    SEMI            shift and go to state 237
    PLUS            shift and go to state 114
    MINUS           shift and go to state 116
    TIMES           shift and go to state 113
    DIVIDE          shift and go to state 112
    MOD             shift and go to state 117

    op_arith                       shift and go to state 115

state 223

    (80) if_declaration -> IF relacion_if THEN BEGIN declarations else_stament . END SEMI

    END             shift and go to state 238


state 224

    (87) else_stament -> ELSE . declarations
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 239
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 225

    (86) relacion_if -> LPARENT op_var op_arith op_var RPARENT . op_logic op_var
    (108) op_logic -> . EQ
    (109) op_logic -> . NE
    (110) op_logic -> . LT
    (111) op_logic -> . LE
    (112) op_logic -> . GT
    (113) op_logic -> . GE
    (114) op_logic -> . LNOT
    (115) op_logic -> . LOR
    (116) op_logic -> . LAND
    (117) op_logic -> . LXOR

    EQ              shift and go to state 111
    NE              shift and go to state 106
    LT              shift and go to state 104
    LE              shift and go to state 101
    GT              shift and go to state 108
    GE              shift and go to state 103
    LNOT            shift and go to state 110
    LOR             shift and go to state 107
    LAND            shift and go to state 109
    LXOR            shift and go to state 102

    op_logic                       shift and go to state 240

state 226

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT DOT . NUMBER RBLOCK OF type_specifier SEMI

    NUMBER          shift and go to state 241


state 227

    (76) while_declaration -> WHILE relation DO BEGIN declarations END SEMI .

    WRITE           reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    READLN          reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    VAR             reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    ID              reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    BREAK           reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    FUNCTION        reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    CONST           reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    WHILE           reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    FOR             reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    IF              reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    NUMBER          reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    PUBLIC          reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    PRIVATE         reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    END             reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    RPARENT         reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)
    ELSE            reduce using rule 76 (while_declaration -> WHILE relation DO BEGIN declarations END SEMI .)


state 228

    (44) class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .

    WRITE           reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    READLN          reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    VAR             reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    ID              reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    BREAK           reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    FUNCTION        reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    CONST           reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    WHILE           reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    FOR             reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    IF              reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    NUMBER          reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    PUBLIC          reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    PRIVATE         reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    END             reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    RPARENT         reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)
    ELSE            reduce using rule 44 (class_declaration -> op_empaquetamiento CLASS ID BEGIN class_statements END SEMI .)


state 229

    (50) method_declaration -> op_empaquetamiento ID LPARENT . parameters_method RPARENT BEGIN declarations END SEMI
    (51) parameters_method -> . ID
    (52) parameters_method -> . ID COMMA parameters_method

    ID              shift and go to state 234

    parameters_method              shift and go to state 242

state 230

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier . SEMI VAR declaration_function_initial BEGIN declarations END SEMI

    SEMI            shift and go to state 243


state 231

    (77) for_declaration -> FOR assignation TO op_var DO BEGIN declarations . END SEMI
    (73) stament -> declarations . ID ASSIGN

    END             shift and go to state 244
    ID              shift and go to state 83


state 232

    (41) class_assignation -> ID ID EQ NEW ID LPARENT parameters_method . RPARENT SEMI

    RPARENT         shift and go to state 245


state 233

    (42) class_assignation -> ID ID EQ NEW ID LPARENT RPARENT . SEMI

    SEMI            shift and go to state 246


state 234

    (51) parameters_method -> ID .
    (52) parameters_method -> ID . COMMA parameters_method

    RPARENT         reduce using rule 51 (parameters_method -> ID .)
    COMMA           shift and go to state 247


state 235

    (60) array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .

    WRITE           reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    READLN          reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    VAR             reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    ID              reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    BREAK           reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    FUNCTION        reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    CONST           reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    WHILE           reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    FOR             reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    IF              reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    NUMBER          reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    PUBLIC          reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    PRIVATE         reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    RPARENT         reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    END             reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    ELSE            reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)
    RBLOCK          reduce using rule 60 (array_assignation -> ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI .)


state 236

    (61) array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .

    WRITE           reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    READLN          reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    VAR             reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    ID              reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    BREAK           reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    FUNCTION        reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    CONST           reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    WHILE           reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    FOR             reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    IF              reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    NUMBER          reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    PUBLIC          reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    PRIVATE         reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    RPARENT         reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    END             reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    ELSE            reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)
    RBLOCK          reduce using rule 61 (array_assignation -> ID LBLOCK ID RBLOCK ASSIGN operation SEMI .)


state 237

    (62) array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .

    WRITE           reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    READLN          reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    VAR             reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    ID              reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    BREAK           reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    FUNCTION        reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    CONST           reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    WHILE           reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    FOR             reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    IF              reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    NUMBER          reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    PUBLIC          reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    PRIVATE         reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    RPARENT         reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    END             reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    ELSE            reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)
    RBLOCK          reduce using rule 62 (array_assignation -> ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI .)


state 238

    (80) if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END . SEMI

    SEMI            shift and go to state 248


state 239

    (87) else_stament -> ELSE declarations .
    (73) stament -> declarations . ID ASSIGN

    END             reduce using rule 87 (else_stament -> ELSE declarations .)
    ID              shift and go to state 83


state 240

    (86) relacion_if -> LPARENT op_var op_arith op_var RPARENT op_logic . op_var
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    ID              shift and go to state 60
    NUMBER          shift and go to state 22

    function_call                  shift and go to state 23
    array_call                     shift and go to state 58
    op_var                         shift and go to state 249

state 241

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER . RBLOCK OF type_specifier SEMI

    RBLOCK          shift and go to state 250


state 242

    (50) method_declaration -> op_empaquetamiento ID LPARENT parameters_method . RPARENT BEGIN declarations END SEMI

    RPARENT         shift and go to state 251


state 243

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI . VAR declaration_function_initial BEGIN declarations END SEMI

    VAR             shift and go to state 252


state 244

    (77) for_declaration -> FOR assignation TO op_var DO BEGIN declarations END . SEMI

    SEMI            shift and go to state 253


state 245

    (41) class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT . SEMI

    SEMI            shift and go to state 254


state 246

    (42) class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .

    WRITE           reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    READLN          reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    VAR             reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    ID              reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    BREAK           reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    FUNCTION        reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    CONST           reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    WHILE           reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    FOR             reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    IF              reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    NUMBER          reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    PUBLIC          reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    PRIVATE         reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    END             reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    RPARENT         reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)
    ELSE            reduce using rule 42 (class_assignation -> ID ID EQ NEW ID LPARENT RPARENT SEMI .)


state 247

    (52) parameters_method -> ID COMMA . parameters_method
    (51) parameters_method -> . ID
    (52) parameters_method -> . ID COMMA parameters_method

    ID              shift and go to state 234

    parameters_method              shift and go to state 255

state 248

    (80) if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .

    WRITE           reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    READLN          reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    VAR             reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    ID              reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    BREAK           reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    FUNCTION        reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    CONST           reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    WHILE           reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    FOR             reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    IF              reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    NUMBER          reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    PUBLIC          reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    PRIVATE         reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    END             reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    RPARENT         reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)
    ELSE            reduce using rule 80 (if_declaration -> IF relacion_if THEN BEGIN declarations else_stament END SEMI .)


state 249

    (86) relacion_if -> LPARENT op_var op_arith op_var RPARENT op_logic op_var .

    THEN            reduce using rule 86 (relacion_if -> LPARENT op_var op_arith op_var RPARENT op_logic op_var .)


state 250

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK . OF type_specifier SEMI

    OF              shift and go to state 256


state 251

    (50) method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT . BEGIN declarations END SEMI

    BEGIN           shift and go to state 257


state 252

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR . declaration_function_initial BEGIN declarations END SEMI
    (122) declaration_function_initial -> . ID COLON type_specifier SEMI
    (123) declaration_function_initial -> . ID COLON type_specifier SEMI declaration_function_initial

    ID              shift and go to state 259

    declaration_function_initial   shift and go to state 258

state 253

    (77) for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .

    WRITE           reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    READLN          reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    VAR             reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    ID              reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    BREAK           reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    FUNCTION        reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    CONST           reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    WHILE           reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    FOR             reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    IF              reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    NUMBER          reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    PUBLIC          reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    PRIVATE         reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    END             reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    RPARENT         reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)
    ELSE            reduce using rule 77 (for_declaration -> FOR assignation TO op_var DO BEGIN declarations END SEMI .)


state 254

    (41) class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .

    WRITE           reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    READLN          reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    VAR             reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    ID              reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    BREAK           reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    FUNCTION        reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    CONST           reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    WHILE           reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    FOR             reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    IF              reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    NUMBER          reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    PUBLIC          reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    PRIVATE         reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    END             reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    RPARENT         reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)
    ELSE            reduce using rule 41 (class_assignation -> ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI .)


state 255

    (52) parameters_method -> ID COMMA parameters_method .

    RPARENT         reduce using rule 52 (parameters_method -> ID COMMA parameters_method .)


state 256

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF . type_specifier SEMI
    (12) type_specifier -> . INTEGER
    (13) type_specifier -> . CHAR
    (14) type_specifier -> . BYTE
    (15) type_specifier -> . REAL
    (16) type_specifier -> . SINGLE
    (17) type_specifier -> . DOUBLE
    (18) type_specifier -> . STRING
    (19) type_specifier -> . BOOLEAN
    (20) type_specifier -> . IP
    (21) type_specifier -> . ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    INTEGER         shift and go to state 93
    CHAR            shift and go to state 89
    BYTE            shift and go to state 94
    REAL            shift and go to state 85
    SINGLE          shift and go to state 90
    DOUBLE          shift and go to state 92
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 91
    IP              shift and go to state 217
    ARRAY           shift and go to state 95

    type_specifier                 shift and go to state 260

state 257

    (50) method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN . declarations END SEMI
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 261
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 258

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial . BEGIN declarations END SEMI

    BEGIN           shift and go to state 262


state 259

    (122) declaration_function_initial -> ID . COLON type_specifier SEMI
    (123) declaration_function_initial -> ID . COLON type_specifier SEMI declaration_function_initial

    COLON           shift and go to state 263


state 260

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier . SEMI

    SEMI            shift and go to state 264


state 261

    (50) method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations . END SEMI
    (73) stament -> declarations . ID ASSIGN

    END             shift and go to state 265
    ID              shift and go to state 83


state 262

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN . declarations END SEMI
    (23) declarations -> . write_declaration
    (24) declarations -> . write_declaration declarations
    (25) declarations -> . readln_declaration
    (26) declarations -> . readln_declaration declarations
    (27) declarations -> . declaracion_variables
    (28) declarations -> . declaracion_variables declarations
    (29) declarations -> . stament
    (30) declarations -> . stament declarations
    (31) declarations -> . var_assignation
    (32) declarations -> . var_assignation declarations
    (33) declarations -> . class_declaration
    (34) declarations -> . class_declaration declarations
    (35) declarations -> . functions_declarations
    (36) declarations -> . functions_declarations declarations
    (37) declarations -> . pointer_assignation
    (38) declarations -> . pointer_assignation declarations
    (39) declarations -> . class_assignation
    (40) declarations -> . class_assignation declarations
    (89) write_declaration -> . WRITE LPARENT op_write RPARENT SEMI
    (98) readln_declaration -> . READLN LPARENT ID RPARENT SEMI
    (6) declaracion_variables -> . VAR var_declaration COLON type_specifier SEMI
    (7) declaracion_variables -> . VAR var_declaration COLON IP SEMI
    (8) declaracion_variables -> . const_declaration
    (70) stament -> . while_declaration
    (71) stament -> . for_declaration
    (72) stament -> . if_declaration
    (73) stament -> . declarations ID ASSIGN
    (74) stament -> . ID LPARENT declarations RPARENT
    (75) stament -> . BREAK SEMI
    (55) var_assignation -> . array_assignation
    (56) var_assignation -> . op_var ASSIGN arith_operation SEMI
    (57) var_assignation -> . op_var ASSIGN STRINGVAL SEMI
    (58) var_assignation -> . op_var ASSIGN IPVAL SEMI
    (59) var_assignation -> . op_var ASSIGN op_var SEMI
    (44) class_declaration -> . op_empaquetamiento CLASS ID BEGIN class_statements END SEMI
    (118) functions_declarations -> . FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI
    (43) pointer_assignation -> . ID MINUS GT ID SEMI
    (41) class_assignation -> . ID ID EQ NEW ID LPARENT parameters_method RPARENT SEMI
    (42) class_assignation -> . ID ID EQ NEW ID LPARENT RPARENT SEMI
    (9) const_declaration -> . CONST ID NUMBER SEMI
    (76) while_declaration -> . WHILE relation DO BEGIN declarations END SEMI
    (77) for_declaration -> . FOR assignation TO op_var DO BEGIN declarations END SEMI
    (80) if_declaration -> . IF relacion_if THEN BEGIN declarations else_stament END SEMI
    (60) array_assignation -> . ID LBLOCK NUMBER RBLOCK ASSIGN operation SEMI
    (61) array_assignation -> . ID LBLOCK ID RBLOCK ASSIGN operation SEMI
    (62) array_assignation -> . ID LBLOCK array_assignation RBLOCK ASSIGN operation SEMI
    (63) array_assignation -> . array_call
    (99) op_var -> . ID
    (100) op_var -> . NUMBER
    (101) op_var -> . array_call
    (102) op_var -> . function_call
    (53) op_empaquetamiento -> . PUBLIC
    (54) op_empaquetamiento -> . PRIVATE
    (94) array_call -> . ID LBLOCK op_var RBLOCK
    (78) function_call -> . ID LPARENT var_declaration RPARENT

    WRITE           shift and go to state 38
    READLN          shift and go to state 24
    VAR             shift and go to state 10
    ID              shift and go to state 42
    BREAK           shift and go to state 34
    FUNCTION        shift and go to state 33
    CONST           shift and go to state 7
    WHILE           shift and go to state 25
    FOR             shift and go to state 35
    IF              shift and go to state 44
    NUMBER          shift and go to state 22
    PUBLIC          shift and go to state 40
    PRIVATE         shift and go to state 30

    class_assignation              shift and go to state 21
    function_call                  shift and go to state 23
    op_var                         shift and go to state 26
    stament                        shift and go to state 27
    op_empaquetamiento             shift and go to state 28
    var_assignation                shift and go to state 29
    readln_declaration             shift and go to state 31
    array_assignation              shift and go to state 46
    write_declaration              shift and go to state 36
    functions_declarations         shift and go to state 37
    const_declaration              shift and go to state 6
    while_declaration              shift and go to state 43
    declaracion_variables          shift and go to state 39
    pointer_assignation            shift and go to state 41
    for_declaration                shift and go to state 32
    declarations                   shift and go to state 266
    class_declaration              shift and go to state 47
    array_call                     shift and go to state 48
    if_declaration                 shift and go to state 49

state 263

    (122) declaration_function_initial -> ID COLON . type_specifier SEMI
    (123) declaration_function_initial -> ID COLON . type_specifier SEMI declaration_function_initial
    (12) type_specifier -> . INTEGER
    (13) type_specifier -> . CHAR
    (14) type_specifier -> . BYTE
    (15) type_specifier -> . REAL
    (16) type_specifier -> . SINGLE
    (17) type_specifier -> . DOUBLE
    (18) type_specifier -> . STRING
    (19) type_specifier -> . BOOLEAN
    (20) type_specifier -> . IP
    (21) type_specifier -> . ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI

    INTEGER         shift and go to state 93
    CHAR            shift and go to state 89
    BYTE            shift and go to state 94
    REAL            shift and go to state 85
    SINGLE          shift and go to state 90
    DOUBLE          shift and go to state 92
    STRING          shift and go to state 87
    BOOLEAN         shift and go to state 91
    IP              shift and go to state 217
    ARRAY           shift and go to state 95

    type_specifier                 shift and go to state 267

state 264

    (21) type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI .

    RPARENT         reduce using rule 21 (type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI .)
    SEMI            reduce using rule 21 (type_specifier -> ARRAY LBLOCK NUMBER DOT DOT NUMBER RBLOCK OF type_specifier SEMI .)


state 265

    (50) method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END . SEMI

    SEMI            shift and go to state 268


state 266

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations . END SEMI
    (73) stament -> declarations . ID ASSIGN

    END             shift and go to state 269
    ID              shift and go to state 83


state 267

    (122) declaration_function_initial -> ID COLON type_specifier . SEMI
    (123) declaration_function_initial -> ID COLON type_specifier . SEMI declaration_function_initial

    SEMI            shift and go to state 270


state 268

    (50) method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI .

    PUBLIC          reduce using rule 50 (method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI .)
    PRIVATE         reduce using rule 50 (method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI .)
    END             reduce using rule 50 (method_declaration -> op_empaquetamiento ID LPARENT parameters_method RPARENT BEGIN declarations END SEMI .)


state 269

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END . SEMI

    SEMI            shift and go to state 271


state 270

    (122) declaration_function_initial -> ID COLON type_specifier SEMI .
    (123) declaration_function_initial -> ID COLON type_specifier SEMI . declaration_function_initial
    (122) declaration_function_initial -> . ID COLON type_specifier SEMI
    (123) declaration_function_initial -> . ID COLON type_specifier SEMI declaration_function_initial

    BEGIN           reduce using rule 122 (declaration_function_initial -> ID COLON type_specifier SEMI .)
    ID              shift and go to state 259

    declaration_function_initial   shift and go to state 272

state 271

    (118) functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .

    WRITE           reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    READLN          reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    VAR             reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    ID              reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    BREAK           reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    FUNCTION        reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    CONST           reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    WHILE           reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    FOR             reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    IF              reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    NUMBER          reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    PUBLIC          reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    PRIVATE         reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    END             reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    RPARENT         reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)
    ELSE            reduce using rule 118 (functions_declarations -> FUNCTION ID LPARENT parameters RPARENT COLON type_specifier SEMI VAR declaration_function_initial BEGIN declarations END SEMI .)


state 272

    (123) declaration_function_initial -> ID COLON type_specifier SEMI declaration_function_initial .

    BEGIN           reduce using rule 123 (declaration_function_initial -> ID COLON type_specifier SEMI declaration_function_initial .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 21 resolved as shift
WARNING: shift/reduce conflict for ID in state 27 resolved as shift
WARNING: shift/reduce conflict for ID in state 29 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
WARNING: shift/reduce conflict for ID in state 36 resolved as shift
WARNING: shift/reduce conflict for ID in state 37 resolved as shift
WARNING: shift/reduce conflict for ID in state 39 resolved as shift
WARNING: shift/reduce conflict for ID in state 41 resolved as shift
WARNING: shift/reduce conflict for ID in state 47 resolved as shift
WARNING: shift/reduce conflict for ID in state 53 resolved as shift
WARNING: shift/reduce conflict for ID in state 62 resolved as shift
WARNING: shift/reduce conflict for ID in state 64 resolved as shift
WARNING: shift/reduce conflict for ID in state 65 resolved as shift
WARNING: shift/reduce conflict for ID in state 70 resolved as shift
WARNING: shift/reduce conflict for ID in state 71 resolved as shift
WARNING: shift/reduce conflict for ID in state 73 resolved as shift
WARNING: shift/reduce conflict for ID in state 74 resolved as shift
WARNING: shift/reduce conflict for ID in state 84 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 88 resolved as shift
WARNING: shift/reduce conflict for RPARENT in state 99 resolved as shift
WARNING: shift/reduce conflict for SEMI in state 124 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 124 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 124 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 124 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 124 resolved as shift
WARNING: shift/reduce conflict for MOD in state 124 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 139 resolved as shift
WARNING: shift/reduce conflict for RBLOCK in state 140 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 145 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 145 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 145 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 145 resolved as shift
WARNING: shift/reduce conflict for MOD in state 145 resolved as shift
WARNING: shift/reduce conflict for EQ in state 155 resolved as shift
WARNING: shift/reduce conflict for NE in state 155 resolved as shift
WARNING: shift/reduce conflict for LT in state 155 resolved as shift
WARNING: shift/reduce conflict for LE in state 155 resolved as shift
WARNING: shift/reduce conflict for GT in state 155 resolved as shift
WARNING: shift/reduce conflict for GE in state 155 resolved as shift
WARNING: shift/reduce conflict for LNOT in state 155 resolved as shift
WARNING: shift/reduce conflict for LOR in state 155 resolved as shift
WARNING: shift/reduce conflict for LAND in state 155 resolved as shift
WARNING: shift/reduce conflict for LXOR in state 155 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 157 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 157 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 157 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 157 resolved as shift
WARNING: shift/reduce conflict for MOD in state 157 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 186 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 186 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 186 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 186 resolved as shift
WARNING: shift/reduce conflict for MOD in state 186 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 198 resolved as shift
WARNING: reduce/reduce conflict in state 48 resolved using rule (array_assignation -> array_call)
WARNING: rejected rule (op_var -> array_call) in state 48
WARNING: reduce/reduce conflict in state 57 resolved using rule (operation -> op_var)
WARNING: rejected rule (relation -> op_var) in state 57
WARNING: reduce/reduce conflict in state 132 resolved using rule (op_write -> array_call)
WARNING: rejected rule (op_var -> array_call) in state 132
WARNING: reduce/reduce conflict in state 145 resolved using rule (operation -> op_var)
WARNING: rejected rule (relation -> op_var) in state 145
WARNING: reduce/reduce conflict in state 186 resolved using rule (arith_operation -> op_var op_arith op_var)
WARNING: rejected rule (operation -> op_var) in state 186
WARNING: Rule (relation -> op_var) is never reduced
